diff --git a/node_modules/react-native-screens/.DS_Store b/node_modules/react-native-screens/.DS_Store
new file mode 100644
index 0000000..72264fe
Binary files /dev/null and b/node_modules/react-native-screens/.DS_Store differ
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSFullWindowOverlayManagerDelegate.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSFullWindowOverlayManagerDelegate.java
new file mode 100644
index 0000000..d58d2e0
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSFullWindowOverlayManagerDelegate.java
@@ -0,0 +1,25 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.BaseViewManagerInterface;
+
+public class RNSFullWindowOverlayManagerDelegate<T extends View, U extends BaseViewManagerInterface<T> & RNSFullWindowOverlayManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSFullWindowOverlayManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    super.setProperty(view, propName, value);
+  }
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSFullWindowOverlayManagerInterface.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSFullWindowOverlayManagerInterface.java
new file mode 100644
index 0000000..93cf53c
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSFullWindowOverlayManagerInterface.java
@@ -0,0 +1,16 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+
+public interface RNSFullWindowOverlayManagerInterface<T extends View> {
+  // No props
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSModalScreenManagerDelegate.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSModalScreenManagerDelegate.java
new file mode 100644
index 0000000..45814ad
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSModalScreenManagerDelegate.java
@@ -0,0 +1,124 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.BaseViewManagerInterface;
+
+public class RNSModalScreenManagerDelegate<T extends View, U extends BaseViewManagerInterface<T> & RNSModalScreenManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSModalScreenManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "sheetAllowedDetents":
+        mViewManager.setSheetAllowedDetents(view, (ReadableArray) value);
+        break;
+      case "sheetLargestUndimmedDetent":
+        mViewManager.setSheetLargestUndimmedDetent(view, value == null ? -1 : ((Double) value).intValue());
+        break;
+      case "sheetGrabberVisible":
+        mViewManager.setSheetGrabberVisible(view, value == null ? false : (boolean) value);
+        break;
+      case "sheetCornerRadius":
+        mViewManager.setSheetCornerRadius(view, value == null ? -1f : ((Double) value).floatValue());
+        break;
+      case "sheetExpandsWhenScrolledToEdge":
+        mViewManager.setSheetExpandsWhenScrolledToEdge(view, value == null ? false : (boolean) value);
+        break;
+      case "sheetInitialDetent":
+        mViewManager.setSheetInitialDetent(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "sheetElevation":
+        mViewManager.setSheetElevation(view, value == null ? 24 : ((Double) value).intValue());
+        break;
+      case "customAnimationOnSwipe":
+        mViewManager.setCustomAnimationOnSwipe(view, value == null ? false : (boolean) value);
+        break;
+      case "fullScreenSwipeEnabled":
+        mViewManager.setFullScreenSwipeEnabled(view, value == null ? false : (boolean) value);
+        break;
+      case "fullScreenSwipeShadowEnabled":
+        mViewManager.setFullScreenSwipeShadowEnabled(view, value == null ? true : (boolean) value);
+        break;
+      case "homeIndicatorHidden":
+        mViewManager.setHomeIndicatorHidden(view, value == null ? false : (boolean) value);
+        break;
+      case "preventNativeDismiss":
+        mViewManager.setPreventNativeDismiss(view, value == null ? false : (boolean) value);
+        break;
+      case "gestureEnabled":
+        mViewManager.setGestureEnabled(view, value == null ? true : (boolean) value);
+        break;
+      case "statusBarColor":
+        mViewManager.setStatusBarColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "statusBarHidden":
+        mViewManager.setStatusBarHidden(view, value == null ? false : (boolean) value);
+        break;
+      case "screenOrientation":
+        mViewManager.setScreenOrientation(view, value == null ? null : (String) value);
+        break;
+      case "statusBarAnimation":
+        mViewManager.setStatusBarAnimation(view, value == null ? null : (String) value);
+        break;
+      case "statusBarStyle":
+        mViewManager.setStatusBarStyle(view, value == null ? null : (String) value);
+        break;
+      case "statusBarTranslucent":
+        mViewManager.setStatusBarTranslucent(view, value == null ? false : (boolean) value);
+        break;
+      case "gestureResponseDistance":
+        mViewManager.setGestureResponseDistance(view, (ReadableMap) value);
+        break;
+      case "stackPresentation":
+        mViewManager.setStackPresentation(view, (String) value);
+        break;
+      case "stackAnimation":
+        mViewManager.setStackAnimation(view, (String) value);
+        break;
+      case "transitionDuration":
+        mViewManager.setTransitionDuration(view, value == null ? 500 : ((Double) value).intValue());
+        break;
+      case "replaceAnimation":
+        mViewManager.setReplaceAnimation(view, (String) value);
+        break;
+      case "swipeDirection":
+        mViewManager.setSwipeDirection(view, (String) value);
+        break;
+      case "hideKeyboardOnSwipe":
+        mViewManager.setHideKeyboardOnSwipe(view, value == null ? false : (boolean) value);
+        break;
+      case "activityState":
+        mViewManager.setActivityState(view, value == null ? -1f : ((Double) value).floatValue());
+        break;
+      case "navigationBarColor":
+        mViewManager.setNavigationBarColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "navigationBarTranslucent":
+        mViewManager.setNavigationBarTranslucent(view, value == null ? false : (boolean) value);
+        break;
+      case "navigationBarHidden":
+        mViewManager.setNavigationBarHidden(view, value == null ? false : (boolean) value);
+        break;
+      case "nativeBackButtonDismissalEnabled":
+        mViewManager.setNativeBackButtonDismissalEnabled(view, value == null ? false : (boolean) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSModalScreenManagerInterface.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSModalScreenManagerInterface.java
new file mode 100644
index 0000000..f45beb6
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSModalScreenManagerInterface.java
@@ -0,0 +1,49 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.bridge.ReadableMap;
+
+public interface RNSModalScreenManagerInterface<T extends View> {
+  void setSheetAllowedDetents(T view, @Nullable ReadableArray value);
+  void setSheetLargestUndimmedDetent(T view, int value);
+  void setSheetGrabberVisible(T view, boolean value);
+  void setSheetCornerRadius(T view, float value);
+  void setSheetExpandsWhenScrolledToEdge(T view, boolean value);
+  void setSheetInitialDetent(T view, int value);
+  void setSheetElevation(T view, int value);
+  void setCustomAnimationOnSwipe(T view, boolean value);
+  void setFullScreenSwipeEnabled(T view, boolean value);
+  void setFullScreenSwipeShadowEnabled(T view, boolean value);
+  void setHomeIndicatorHidden(T view, boolean value);
+  void setPreventNativeDismiss(T view, boolean value);
+  void setGestureEnabled(T view, boolean value);
+  void setStatusBarColor(T view, @Nullable Integer value);
+  void setStatusBarHidden(T view, boolean value);
+  void setScreenOrientation(T view, @Nullable String value);
+  void setStatusBarAnimation(T view, @Nullable String value);
+  void setStatusBarStyle(T view, @Nullable String value);
+  void setStatusBarTranslucent(T view, boolean value);
+  void setGestureResponseDistance(T view, @Nullable ReadableMap value);
+  void setStackPresentation(T view, @Nullable String value);
+  void setStackAnimation(T view, @Nullable String value);
+  void setTransitionDuration(T view, int value);
+  void setReplaceAnimation(T view, @Nullable String value);
+  void setSwipeDirection(T view, @Nullable String value);
+  void setHideKeyboardOnSwipe(T view, boolean value);
+  void setActivityState(T view, float value);
+  void setNavigationBarColor(T view, @Nullable Integer value);
+  void setNavigationBarTranslucent(T view, boolean value);
+  void setNavigationBarHidden(T view, boolean value);
+  void setNativeBackButtonDismissalEnabled(T view, boolean value);
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenContainerManagerDelegate.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenContainerManagerDelegate.java
new file mode 100644
index 0000000..b214b1a
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenContainerManagerDelegate.java
@@ -0,0 +1,25 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.BaseViewManagerInterface;
+
+public class RNSScreenContainerManagerDelegate<T extends View, U extends BaseViewManagerInterface<T> & RNSScreenContainerManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSScreenContainerManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    super.setProperty(view, propName, value);
+  }
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenContainerManagerInterface.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenContainerManagerInterface.java
new file mode 100644
index 0000000..6f1d776
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenContainerManagerInterface.java
@@ -0,0 +1,16 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+
+public interface RNSScreenContainerManagerInterface<T extends View> {
+  // No props
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenContentWrapperManagerDelegate.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenContentWrapperManagerDelegate.java
new file mode 100644
index 0000000..047adae
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenContentWrapperManagerDelegate.java
@@ -0,0 +1,25 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.BaseViewManagerInterface;
+
+public class RNSScreenContentWrapperManagerDelegate<T extends View, U extends BaseViewManagerInterface<T> & RNSScreenContentWrapperManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSScreenContentWrapperManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    super.setProperty(view, propName, value);
+  }
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenContentWrapperManagerInterface.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenContentWrapperManagerInterface.java
new file mode 100644
index 0000000..bd6c01d
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenContentWrapperManagerInterface.java
@@ -0,0 +1,16 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+
+public interface RNSScreenContentWrapperManagerInterface<T extends View> {
+  // No props
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenFooterManagerDelegate.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenFooterManagerDelegate.java
new file mode 100644
index 0000000..d8e08e7
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenFooterManagerDelegate.java
@@ -0,0 +1,25 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.BaseViewManagerInterface;
+
+public class RNSScreenFooterManagerDelegate<T extends View, U extends BaseViewManagerInterface<T> & RNSScreenFooterManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSScreenFooterManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    super.setProperty(view, propName, value);
+  }
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenFooterManagerInterface.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenFooterManagerInterface.java
new file mode 100644
index 0000000..29d299a
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenFooterManagerInterface.java
@@ -0,0 +1,16 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+
+public interface RNSScreenFooterManagerInterface<T extends View> {
+  // No props
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenManagerDelegate.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenManagerDelegate.java
new file mode 100644
index 0000000..db5b527
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenManagerDelegate.java
@@ -0,0 +1,124 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.BaseViewManagerInterface;
+
+public class RNSScreenManagerDelegate<T extends View, U extends BaseViewManagerInterface<T> & RNSScreenManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSScreenManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "sheetAllowedDetents":
+        mViewManager.setSheetAllowedDetents(view, (ReadableArray) value);
+        break;
+      case "sheetLargestUndimmedDetent":
+        mViewManager.setSheetLargestUndimmedDetent(view, value == null ? -1 : ((Double) value).intValue());
+        break;
+      case "sheetGrabberVisible":
+        mViewManager.setSheetGrabberVisible(view, value == null ? false : (boolean) value);
+        break;
+      case "sheetCornerRadius":
+        mViewManager.setSheetCornerRadius(view, value == null ? -1f : ((Double) value).floatValue());
+        break;
+      case "sheetExpandsWhenScrolledToEdge":
+        mViewManager.setSheetExpandsWhenScrolledToEdge(view, value == null ? false : (boolean) value);
+        break;
+      case "sheetInitialDetent":
+        mViewManager.setSheetInitialDetent(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "sheetElevation":
+        mViewManager.setSheetElevation(view, value == null ? 24 : ((Double) value).intValue());
+        break;
+      case "customAnimationOnSwipe":
+        mViewManager.setCustomAnimationOnSwipe(view, value == null ? false : (boolean) value);
+        break;
+      case "fullScreenSwipeEnabled":
+        mViewManager.setFullScreenSwipeEnabled(view, value == null ? false : (boolean) value);
+        break;
+      case "fullScreenSwipeShadowEnabled":
+        mViewManager.setFullScreenSwipeShadowEnabled(view, value == null ? true : (boolean) value);
+        break;
+      case "homeIndicatorHidden":
+        mViewManager.setHomeIndicatorHidden(view, value == null ? false : (boolean) value);
+        break;
+      case "preventNativeDismiss":
+        mViewManager.setPreventNativeDismiss(view, value == null ? false : (boolean) value);
+        break;
+      case "gestureEnabled":
+        mViewManager.setGestureEnabled(view, value == null ? true : (boolean) value);
+        break;
+      case "statusBarColor":
+        mViewManager.setStatusBarColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "statusBarHidden":
+        mViewManager.setStatusBarHidden(view, value == null ? false : (boolean) value);
+        break;
+      case "screenOrientation":
+        mViewManager.setScreenOrientation(view, value == null ? null : (String) value);
+        break;
+      case "statusBarAnimation":
+        mViewManager.setStatusBarAnimation(view, value == null ? null : (String) value);
+        break;
+      case "statusBarStyle":
+        mViewManager.setStatusBarStyle(view, value == null ? null : (String) value);
+        break;
+      case "statusBarTranslucent":
+        mViewManager.setStatusBarTranslucent(view, value == null ? false : (boolean) value);
+        break;
+      case "gestureResponseDistance":
+        mViewManager.setGestureResponseDistance(view, (ReadableMap) value);
+        break;
+      case "stackPresentation":
+        mViewManager.setStackPresentation(view, (String) value);
+        break;
+      case "stackAnimation":
+        mViewManager.setStackAnimation(view, (String) value);
+        break;
+      case "transitionDuration":
+        mViewManager.setTransitionDuration(view, value == null ? 500 : ((Double) value).intValue());
+        break;
+      case "replaceAnimation":
+        mViewManager.setReplaceAnimation(view, (String) value);
+        break;
+      case "swipeDirection":
+        mViewManager.setSwipeDirection(view, (String) value);
+        break;
+      case "hideKeyboardOnSwipe":
+        mViewManager.setHideKeyboardOnSwipe(view, value == null ? false : (boolean) value);
+        break;
+      case "activityState":
+        mViewManager.setActivityState(view, value == null ? -1f : ((Double) value).floatValue());
+        break;
+      case "navigationBarColor":
+        mViewManager.setNavigationBarColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "navigationBarTranslucent":
+        mViewManager.setNavigationBarTranslucent(view, value == null ? false : (boolean) value);
+        break;
+      case "navigationBarHidden":
+        mViewManager.setNavigationBarHidden(view, value == null ? false : (boolean) value);
+        break;
+      case "nativeBackButtonDismissalEnabled":
+        mViewManager.setNativeBackButtonDismissalEnabled(view, value == null ? false : (boolean) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenManagerInterface.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenManagerInterface.java
new file mode 100644
index 0000000..a693133
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenManagerInterface.java
@@ -0,0 +1,49 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.bridge.ReadableMap;
+
+public interface RNSScreenManagerInterface<T extends View> {
+  void setSheetAllowedDetents(T view, @Nullable ReadableArray value);
+  void setSheetLargestUndimmedDetent(T view, int value);
+  void setSheetGrabberVisible(T view, boolean value);
+  void setSheetCornerRadius(T view, float value);
+  void setSheetExpandsWhenScrolledToEdge(T view, boolean value);
+  void setSheetInitialDetent(T view, int value);
+  void setSheetElevation(T view, int value);
+  void setCustomAnimationOnSwipe(T view, boolean value);
+  void setFullScreenSwipeEnabled(T view, boolean value);
+  void setFullScreenSwipeShadowEnabled(T view, boolean value);
+  void setHomeIndicatorHidden(T view, boolean value);
+  void setPreventNativeDismiss(T view, boolean value);
+  void setGestureEnabled(T view, boolean value);
+  void setStatusBarColor(T view, @Nullable Integer value);
+  void setStatusBarHidden(T view, boolean value);
+  void setScreenOrientation(T view, @Nullable String value);
+  void setStatusBarAnimation(T view, @Nullable String value);
+  void setStatusBarStyle(T view, @Nullable String value);
+  void setStatusBarTranslucent(T view, boolean value);
+  void setGestureResponseDistance(T view, @Nullable ReadableMap value);
+  void setStackPresentation(T view, @Nullable String value);
+  void setStackAnimation(T view, @Nullable String value);
+  void setTransitionDuration(T view, int value);
+  void setReplaceAnimation(T view, @Nullable String value);
+  void setSwipeDirection(T view, @Nullable String value);
+  void setHideKeyboardOnSwipe(T view, boolean value);
+  void setActivityState(T view, float value);
+  void setNavigationBarColor(T view, @Nullable Integer value);
+  void setNavigationBarTranslucent(T view, boolean value);
+  void setNavigationBarHidden(T view, boolean value);
+  void setNativeBackButtonDismissalEnabled(T view, boolean value);
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenNavigationContainerManagerDelegate.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenNavigationContainerManagerDelegate.java
new file mode 100644
index 0000000..ab72606
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenNavigationContainerManagerDelegate.java
@@ -0,0 +1,25 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.BaseViewManagerInterface;
+
+public class RNSScreenNavigationContainerManagerDelegate<T extends View, U extends BaseViewManagerInterface<T> & RNSScreenNavigationContainerManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSScreenNavigationContainerManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    super.setProperty(view, propName, value);
+  }
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenNavigationContainerManagerInterface.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenNavigationContainerManagerInterface.java
new file mode 100644
index 0000000..cafd4b4
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenNavigationContainerManagerInterface.java
@@ -0,0 +1,16 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+
+public interface RNSScreenNavigationContainerManagerInterface<T extends View> {
+  // No props
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackHeaderConfigManagerDelegate.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackHeaderConfigManagerDelegate.java
new file mode 100644
index 0000000..25e3410
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackHeaderConfigManagerDelegate.java
@@ -0,0 +1,113 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.BaseViewManagerInterface;
+
+public class RNSScreenStackHeaderConfigManagerDelegate<T extends View, U extends BaseViewManagerInterface<T> & RNSScreenStackHeaderConfigManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSScreenStackHeaderConfigManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "backgroundColor":
+        mViewManager.setBackgroundColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "backTitle":
+        mViewManager.setBackTitle(view, value == null ? null : (String) value);
+        break;
+      case "backTitleFontFamily":
+        mViewManager.setBackTitleFontFamily(view, value == null ? null : (String) value);
+        break;
+      case "backTitleFontSize":
+        mViewManager.setBackTitleFontSize(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "backTitleVisible":
+        mViewManager.setBackTitleVisible(view, value == null ? true : (boolean) value);
+        break;
+      case "color":
+        mViewManager.setColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "direction":
+        mViewManager.setDirection(view, (String) value);
+        break;
+      case "hidden":
+        mViewManager.setHidden(view, value == null ? false : (boolean) value);
+        break;
+      case "hideShadow":
+        mViewManager.setHideShadow(view, value == null ? false : (boolean) value);
+        break;
+      case "largeTitle":
+        mViewManager.setLargeTitle(view, value == null ? false : (boolean) value);
+        break;
+      case "largeTitleFontFamily":
+        mViewManager.setLargeTitleFontFamily(view, value == null ? null : (String) value);
+        break;
+      case "largeTitleFontSize":
+        mViewManager.setLargeTitleFontSize(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "largeTitleFontWeight":
+        mViewManager.setLargeTitleFontWeight(view, value == null ? null : (String) value);
+        break;
+      case "largeTitleBackgroundColor":
+        mViewManager.setLargeTitleBackgroundColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "largeTitleHideShadow":
+        mViewManager.setLargeTitleHideShadow(view, value == null ? false : (boolean) value);
+        break;
+      case "largeTitleColor":
+        mViewManager.setLargeTitleColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "translucent":
+        mViewManager.setTranslucent(view, value == null ? false : (boolean) value);
+        break;
+      case "title":
+        mViewManager.setTitle(view, value == null ? null : (String) value);
+        break;
+      case "titleFontFamily":
+        mViewManager.setTitleFontFamily(view, value == null ? null : (String) value);
+        break;
+      case "titleFontSize":
+        mViewManager.setTitleFontSize(view, value == null ? 0 : ((Double) value).intValue());
+        break;
+      case "titleFontWeight":
+        mViewManager.setTitleFontWeight(view, value == null ? null : (String) value);
+        break;
+      case "titleColor":
+        mViewManager.setTitleColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "disableBackButtonMenu":
+        mViewManager.setDisableBackButtonMenu(view, value == null ? false : (boolean) value);
+        break;
+      case "backButtonDisplayMode":
+        mViewManager.setBackButtonDisplayMode(view, (String) value);
+        break;
+      case "hideBackButton":
+        mViewManager.setHideBackButton(view, value == null ? false : (boolean) value);
+        break;
+      case "backButtonInCustomView":
+        mViewManager.setBackButtonInCustomView(view, value == null ? false : (boolean) value);
+        break;
+      case "blurEffect":
+        mViewManager.setBlurEffect(view, (String) value);
+        break;
+      case "topInsetEnabled":
+        mViewManager.setTopInsetEnabled(view, value == null ? false : (boolean) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackHeaderConfigManagerInterface.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackHeaderConfigManagerInterface.java
new file mode 100644
index 0000000..0c9891f
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackHeaderConfigManagerInterface.java
@@ -0,0 +1,44 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+
+public interface RNSScreenStackHeaderConfigManagerInterface<T extends View> {
+  void setBackgroundColor(T view, @Nullable Integer value);
+  void setBackTitle(T view, @Nullable String value);
+  void setBackTitleFontFamily(T view, @Nullable String value);
+  void setBackTitleFontSize(T view, int value);
+  void setBackTitleVisible(T view, boolean value);
+  void setColor(T view, @Nullable Integer value);
+  void setDirection(T view, @Nullable String value);
+  void setHidden(T view, boolean value);
+  void setHideShadow(T view, boolean value);
+  void setLargeTitle(T view, boolean value);
+  void setLargeTitleFontFamily(T view, @Nullable String value);
+  void setLargeTitleFontSize(T view, int value);
+  void setLargeTitleFontWeight(T view, @Nullable String value);
+  void setLargeTitleBackgroundColor(T view, @Nullable Integer value);
+  void setLargeTitleHideShadow(T view, boolean value);
+  void setLargeTitleColor(T view, @Nullable Integer value);
+  void setTranslucent(T view, boolean value);
+  void setTitle(T view, @Nullable String value);
+  void setTitleFontFamily(T view, @Nullable String value);
+  void setTitleFontSize(T view, int value);
+  void setTitleFontWeight(T view, @Nullable String value);
+  void setTitleColor(T view, @Nullable Integer value);
+  void setDisableBackButtonMenu(T view, boolean value);
+  void setBackButtonDisplayMode(T view, @Nullable String value);
+  void setHideBackButton(T view, boolean value);
+  void setBackButtonInCustomView(T view, boolean value);
+  void setBlurEffect(T view, @Nullable String value);
+  void setTopInsetEnabled(T view, boolean value);
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackHeaderSubviewManagerDelegate.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackHeaderSubviewManagerDelegate.java
new file mode 100644
index 0000000..ccf0bea
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackHeaderSubviewManagerDelegate.java
@@ -0,0 +1,31 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.BaseViewManagerInterface;
+
+public class RNSScreenStackHeaderSubviewManagerDelegate<T extends View, U extends BaseViewManagerInterface<T> & RNSScreenStackHeaderSubviewManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSScreenStackHeaderSubviewManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "type":
+        mViewManager.setType(view, (String) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackHeaderSubviewManagerInterface.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackHeaderSubviewManagerInterface.java
new file mode 100644
index 0000000..14342c7
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackHeaderSubviewManagerInterface.java
@@ -0,0 +1,17 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+
+public interface RNSScreenStackHeaderSubviewManagerInterface<T extends View> {
+  void setType(T view, @Nullable String value);
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackManagerDelegate.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackManagerDelegate.java
new file mode 100644
index 0000000..c4109c3
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackManagerDelegate.java
@@ -0,0 +1,25 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.BaseViewManagerInterface;
+
+public class RNSScreenStackManagerDelegate<T extends View, U extends BaseViewManagerInterface<T> & RNSScreenStackManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSScreenStackManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    super.setProperty(view, propName, value);
+  }
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackManagerInterface.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackManagerInterface.java
new file mode 100644
index 0000000..f0dcecc
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSScreenStackManagerInterface.java
@@ -0,0 +1,16 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+
+public interface RNSScreenStackManagerInterface<T extends View> {
+  // No props
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSSearchBarManagerDelegate.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSSearchBarManagerDelegate.java
new file mode 100644
index 0000000..e3ff852
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSSearchBarManagerDelegate.java
@@ -0,0 +1,99 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaDelegate.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+import com.facebook.react.bridge.ColorPropConverter;
+import com.facebook.react.bridge.ReadableArray;
+import com.facebook.react.uimanager.BaseViewManagerDelegate;
+import com.facebook.react.uimanager.BaseViewManagerInterface;
+
+public class RNSSearchBarManagerDelegate<T extends View, U extends BaseViewManagerInterface<T> & RNSSearchBarManagerInterface<T>> extends BaseViewManagerDelegate<T, U> {
+  public RNSSearchBarManagerDelegate(U viewManager) {
+    super(viewManager);
+  }
+  @Override
+  public void setProperty(T view, String propName, @Nullable Object value) {
+    switch (propName) {
+      case "hideWhenScrolling":
+        mViewManager.setHideWhenScrolling(view, value == null ? false : (boolean) value);
+        break;
+      case "autoCapitalize":
+        mViewManager.setAutoCapitalize(view, (String) value);
+        break;
+      case "placeholder":
+        mViewManager.setPlaceholder(view, value == null ? null : (String) value);
+        break;
+      case "placement":
+        mViewManager.setPlacement(view, (String) value);
+        break;
+      case "obscureBackground":
+        mViewManager.setObscureBackground(view, value == null ? false : (boolean) value);
+        break;
+      case "hideNavigationBar":
+        mViewManager.setHideNavigationBar(view, value == null ? false : (boolean) value);
+        break;
+      case "cancelButtonText":
+        mViewManager.setCancelButtonText(view, value == null ? null : (String) value);
+        break;
+      case "barTintColor":
+        mViewManager.setBarTintColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "tintColor":
+        mViewManager.setTintColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "textColor":
+        mViewManager.setTextColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "disableBackButtonOverride":
+        mViewManager.setDisableBackButtonOverride(view, value == null ? false : (boolean) value);
+        break;
+      case "inputType":
+        mViewManager.setInputType(view, value == null ? null : (String) value);
+        break;
+      case "hintTextColor":
+        mViewManager.setHintTextColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "headerIconColor":
+        mViewManager.setHeaderIconColor(view, ColorPropConverter.getColor(value, view.getContext()));
+        break;
+      case "shouldShowHintSearchIcon":
+        mViewManager.setShouldShowHintSearchIcon(view, value == null ? true : (boolean) value);
+        break;
+      default:
+        super.setProperty(view, propName, value);
+    }
+  }
+
+  @Override
+  public void receiveCommand(T view, String commandName, @Nullable ReadableArray args) {
+    switch (commandName) {
+      case "blur":
+        mViewManager.blur(view);
+        break;
+      case "focus":
+        mViewManager.focus(view);
+        break;
+      case "clearText":
+        mViewManager.clearText(view);
+        break;
+      case "toggleCancelButton":
+        mViewManager.toggleCancelButton(view, args.getBoolean(0));
+        break;
+      case "setText":
+        mViewManager.setText(view, args.getString(0));
+        break;
+      case "cancelSearch":
+        mViewManager.cancelSearch(view);
+        break;
+    }
+  }
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSSearchBarManagerInterface.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSSearchBarManagerInterface.java
new file mode 100644
index 0000000..428c1d4
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/facebook/react/viewmanagers/RNSSearchBarManagerInterface.java
@@ -0,0 +1,37 @@
+/**
+* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+*
+* Do not edit this file as changes may cause incorrect behavior and will be lost
+* once the code is regenerated.
+*
+* @generated by codegen project: GeneratePropsJavaInterface.js
+*/
+
+package com.facebook.react.viewmanagers;
+
+import android.view.View;
+import androidx.annotation.Nullable;
+
+public interface RNSSearchBarManagerInterface<T extends View> {
+  void setHideWhenScrolling(T view, boolean value);
+  void setAutoCapitalize(T view, @Nullable String value);
+  void setPlaceholder(T view, @Nullable String value);
+  void setPlacement(T view, @Nullable String value);
+  void setObscureBackground(T view, boolean value);
+  void setHideNavigationBar(T view, boolean value);
+  void setCancelButtonText(T view, @Nullable String value);
+  void setBarTintColor(T view, @Nullable Integer value);
+  void setTintColor(T view, @Nullable Integer value);
+  void setTextColor(T view, @Nullable Integer value);
+  void setDisableBackButtonOverride(T view, boolean value);
+  void setInputType(T view, @Nullable String value);
+  void setHintTextColor(T view, @Nullable Integer value);
+  void setHeaderIconColor(T view, @Nullable Integer value);
+  void setShouldShowHintSearchIcon(T view, boolean value);
+  void blur(T view);
+  void focus(T view);
+  void clearText(T view);
+  void toggleCancelButton(T view, boolean flag);
+  void setText(T view, String text);
+  void cancelSearch(T view);
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/swmansion/rnscreens/NativeScreensModuleSpec.java b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/swmansion/rnscreens/NativeScreensModuleSpec.java
new file mode 100644
index 0000000..1f5b046
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/java/com/swmansion/rnscreens/NativeScreensModuleSpec.java
@@ -0,0 +1,35 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJavaSpec.js
+ *
+ * @nolint
+ */
+
+package com.swmansion.rnscreens;
+
+import com.facebook.proguard.annotations.DoNotStrip;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.ReactContextBaseJavaModule;
+import com.facebook.react.bridge.ReactMethod;
+import com.facebook.react.turbomodule.core.interfaces.TurboModule;
+import javax.annotation.Nonnull;
+
+public abstract class NativeScreensModuleSpec extends ReactContextBaseJavaModule implements TurboModule {
+  public static final String NAME = "RNSModule";
+
+  public NativeScreensModuleSpec(ReactApplicationContext reactContext) {
+    super(reactContext);
+  }
+
+  @Override
+  public @Nonnull String getName() {
+    return NAME;
+  }
+
+
+}
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/CMakeLists.txt b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/CMakeLists.txt
new file mode 100644
index 0000000..919e58c
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/CMakeLists.txt
@@ -0,0 +1,36 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+cmake_minimum_required(VERSION 3.13)
+set(CMAKE_VERBOSE_MAKEFILE on)
+
+file(GLOB react_codegen_SRCS CONFIGURE_DEPENDS *.cpp react/renderer/components/rnscreens/*.cpp)
+
+add_library(
+  react_codegen_rnscreens
+  OBJECT
+  ${react_codegen_SRCS}
+)
+
+target_include_directories(react_codegen_rnscreens PUBLIC . react/renderer/components/rnscreens)
+
+target_link_libraries(
+  react_codegen_rnscreens
+  fbjni
+  jsi
+  # We need to link different libraries based on whether we are building rncore or not, that's necessary
+  # because we want to break a circular dependency between react_codegen_rncore and reactnative
+  reactnative
+)
+
+target_compile_options(
+  react_codegen_rnscreens
+  PRIVATE
+  -DLOG_TAG=\"ReactNative\"
+  -fexceptions
+  -frtti
+  -std=c++20
+  -Wall
+)
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/ComponentDescriptors.cpp b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/ComponentDescriptors.cpp
new file mode 100644
index 0000000..3cfb66d
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/ComponentDescriptors.cpp
@@ -0,0 +1,28 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorCpp.js
+ */
+
+#include <react/renderer/components/rnscreens/ComponentDescriptors.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+void rnscreens_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry) {
+registry->add(concreteComponentDescriptorProvider<RNSFullWindowOverlayComponentDescriptor>());
+registry->add(concreteComponentDescriptorProvider<RNSScreenContainerComponentDescriptor>());
+registry->add(concreteComponentDescriptorProvider<RNSScreenContentWrapperComponentDescriptor>());
+registry->add(concreteComponentDescriptorProvider<RNSScreenFooterComponentDescriptor>());
+registry->add(concreteComponentDescriptorProvider<RNSScreenNavigationContainerComponentDescriptor>());
+registry->add(concreteComponentDescriptorProvider<RNSScreenStackComponentDescriptor>());
+registry->add(concreteComponentDescriptorProvider<RNSSearchBarComponentDescriptor>());
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/ComponentDescriptors.h b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/ComponentDescriptors.h
new file mode 100644
index 0000000..2823cf3
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/ComponentDescriptors.h
@@ -0,0 +1,30 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateComponentDescriptorH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rnscreens/ShadowNodes.h>
+#include <react/renderer/core/ConcreteComponentDescriptor.h>
+#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>
+
+namespace facebook::react {
+
+using RNSFullWindowOverlayComponentDescriptor = ConcreteComponentDescriptor<RNSFullWindowOverlayShadowNode>;
+using RNSScreenContainerComponentDescriptor = ConcreteComponentDescriptor<RNSScreenContainerShadowNode>;
+using RNSScreenContentWrapperComponentDescriptor = ConcreteComponentDescriptor<RNSScreenContentWrapperShadowNode>;
+using RNSScreenFooterComponentDescriptor = ConcreteComponentDescriptor<RNSScreenFooterShadowNode>;
+using RNSScreenNavigationContainerComponentDescriptor = ConcreteComponentDescriptor<RNSScreenNavigationContainerShadowNode>;
+using RNSScreenStackComponentDescriptor = ConcreteComponentDescriptor<RNSScreenStackShadowNode>;
+using RNSSearchBarComponentDescriptor = ConcreteComponentDescriptor<RNSSearchBarShadowNode>;
+
+void rnscreens_registerComponentDescriptorsFromCodegen(
+  std::shared_ptr<const ComponentDescriptorProviderRegistry> registry);
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/EventEmitters.cpp b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/EventEmitters.cpp
new file mode 100644
index 0000000..54872da
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/EventEmitters.cpp
@@ -0,0 +1,315 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterCpp.js
+ */
+
+#include <react/renderer/components/rnscreens/EventEmitters.h>
+
+
+namespace facebook::react {
+
+
+void RNSModalScreenEventEmitter::onAppear(OnAppear $event) const {
+  dispatchEvent("appear", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSModalScreenEventEmitter::onDisappear(OnDisappear $event) const {
+  dispatchEvent("disappear", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSModalScreenEventEmitter::onDismissed(OnDismissed $event) const {
+  dispatchEvent("dismissed", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    $payload.setProperty(runtime, "dismissCount", $event.dismissCount);
+    return $payload;
+  });
+}
+
+
+void RNSModalScreenEventEmitter::onNativeDismissCancelled(OnNativeDismissCancelled $event) const {
+  dispatchEvent("nativeDismissCancelled", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    $payload.setProperty(runtime, "dismissCount", $event.dismissCount);
+    return $payload;
+  });
+}
+
+
+void RNSModalScreenEventEmitter::onWillAppear(OnWillAppear $event) const {
+  dispatchEvent("willAppear", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSModalScreenEventEmitter::onWillDisappear(OnWillDisappear $event) const {
+  dispatchEvent("willDisappear", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSModalScreenEventEmitter::onHeaderHeightChange(OnHeaderHeightChange $event) const {
+  dispatchEvent("headerHeightChange", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    $payload.setProperty(runtime, "headerHeight", $event.headerHeight);
+    return $payload;
+  });
+}
+
+
+void RNSModalScreenEventEmitter::onTransitionProgress(OnTransitionProgress $event) const {
+  dispatchEvent("transitionProgress", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    $payload.setProperty(runtime, "progress", $event.progress);
+$payload.setProperty(runtime, "closing", $event.closing);
+$payload.setProperty(runtime, "goingForward", $event.goingForward);
+    return $payload;
+  });
+}
+
+
+void RNSModalScreenEventEmitter::onGestureCancel(OnGestureCancel $event) const {
+  dispatchEvent("gestureCancel", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSModalScreenEventEmitter::onHeaderBackButtonClicked(OnHeaderBackButtonClicked $event) const {
+  dispatchEvent("headerBackButtonClicked", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSModalScreenEventEmitter::onSheetDetentChanged(OnSheetDetentChanged $event) const {
+  dispatchEvent("sheetDetentChanged", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    $payload.setProperty(runtime, "index", $event.index);
+$payload.setProperty(runtime, "isStable", $event.isStable);
+    return $payload;
+  });
+}
+
+
+
+
+
+void RNSScreenEventEmitter::onAppear(OnAppear $event) const {
+  dispatchEvent("appear", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSScreenEventEmitter::onDisappear(OnDisappear $event) const {
+  dispatchEvent("disappear", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSScreenEventEmitter::onDismissed(OnDismissed $event) const {
+  dispatchEvent("dismissed", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    $payload.setProperty(runtime, "dismissCount", $event.dismissCount);
+    return $payload;
+  });
+}
+
+
+void RNSScreenEventEmitter::onNativeDismissCancelled(OnNativeDismissCancelled $event) const {
+  dispatchEvent("nativeDismissCancelled", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    $payload.setProperty(runtime, "dismissCount", $event.dismissCount);
+    return $payload;
+  });
+}
+
+
+void RNSScreenEventEmitter::onWillAppear(OnWillAppear $event) const {
+  dispatchEvent("willAppear", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSScreenEventEmitter::onWillDisappear(OnWillDisappear $event) const {
+  dispatchEvent("willDisappear", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSScreenEventEmitter::onHeaderHeightChange(OnHeaderHeightChange $event) const {
+  dispatchEvent("headerHeightChange", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    $payload.setProperty(runtime, "headerHeight", $event.headerHeight);
+    return $payload;
+  });
+}
+
+
+void RNSScreenEventEmitter::onTransitionProgress(OnTransitionProgress $event) const {
+  dispatchEvent("transitionProgress", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    $payload.setProperty(runtime, "progress", $event.progress);
+$payload.setProperty(runtime, "closing", $event.closing);
+$payload.setProperty(runtime, "goingForward", $event.goingForward);
+    return $payload;
+  });
+}
+
+
+void RNSScreenEventEmitter::onGestureCancel(OnGestureCancel $event) const {
+  dispatchEvent("gestureCancel", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSScreenEventEmitter::onHeaderBackButtonClicked(OnHeaderBackButtonClicked $event) const {
+  dispatchEvent("headerBackButtonClicked", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSScreenEventEmitter::onSheetDetentChanged(OnSheetDetentChanged $event) const {
+  dispatchEvent("sheetDetentChanged", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    $payload.setProperty(runtime, "index", $event.index);
+$payload.setProperty(runtime, "isStable", $event.isStable);
+    return $payload;
+  });
+}
+
+
+
+void RNSScreenStackHeaderConfigEventEmitter::onAttached(OnAttached $event) const {
+  dispatchEvent("attached", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSScreenStackHeaderConfigEventEmitter::onDetached(OnDetached $event) const {
+  dispatchEvent("detached", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+
+void RNSScreenStackEventEmitter::onFinishTransitioning(OnFinishTransitioning $event) const {
+  dispatchEvent("finishTransitioning", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSSearchBarEventEmitter::onSearchFocus(OnSearchFocus $event) const {
+  dispatchEvent("searchFocus", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSSearchBarEventEmitter::onSearchBlur(OnSearchBlur $event) const {
+  dispatchEvent("searchBlur", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSSearchBarEventEmitter::onSearchButtonPress(OnSearchButtonPress $event) const {
+  dispatchEvent("searchButtonPress", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    $payload.setProperty(runtime, "text", $event.text);
+    return $payload;
+  });
+}
+
+
+void RNSSearchBarEventEmitter::onCancelButtonPress(OnCancelButtonPress $event) const {
+  dispatchEvent("cancelButtonPress", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSSearchBarEventEmitter::onChangeText(OnChangeText $event) const {
+  dispatchEvent("changeText", [$event=std::move($event)](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    $payload.setProperty(runtime, "text", $event.text);
+    return $payload;
+  });
+}
+
+
+void RNSSearchBarEventEmitter::onClose(OnClose $event) const {
+  dispatchEvent("close", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+
+void RNSSearchBarEventEmitter::onOpen(OnOpen $event) const {
+  dispatchEvent("open", [](jsi::Runtime &runtime) {
+    auto $payload = jsi::Object(runtime);
+    
+    return $payload;
+  });
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/EventEmitters.h b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/EventEmitters.h
new file mode 100644
index 0000000..acaa28e
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/EventEmitters.h
@@ -0,0 +1,271 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateEventEmitterH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewEventEmitter.h>
+
+
+namespace facebook::react {
+class RNSFullWindowOverlayEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSModalScreenEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnAppear {
+      
+    };
+
+  struct OnDisappear {
+      
+    };
+
+  struct OnDismissed {
+      int dismissCount;
+    };
+
+  struct OnNativeDismissCancelled {
+      int dismissCount;
+    };
+
+  struct OnWillAppear {
+      
+    };
+
+  struct OnWillDisappear {
+      
+    };
+
+  struct OnHeaderHeightChange {
+      double headerHeight;
+    };
+
+  struct OnTransitionProgress {
+      double progress;
+    int closing;
+    int goingForward;
+    };
+
+  struct OnGestureCancel {
+      
+    };
+
+  struct OnHeaderBackButtonClicked {
+      
+    };
+
+  struct OnSheetDetentChanged {
+      int index;
+    bool isStable;
+    };
+  void onAppear(OnAppear value) const;
+
+  void onDisappear(OnDisappear value) const;
+
+  void onDismissed(OnDismissed value) const;
+
+  void onNativeDismissCancelled(OnNativeDismissCancelled value) const;
+
+  void onWillAppear(OnWillAppear value) const;
+
+  void onWillDisappear(OnWillDisappear value) const;
+
+  void onHeaderHeightChange(OnHeaderHeightChange value) const;
+
+  void onTransitionProgress(OnTransitionProgress value) const;
+
+  void onGestureCancel(OnGestureCancel value) const;
+
+  void onHeaderBackButtonClicked(OnHeaderBackButtonClicked value) const;
+
+  void onSheetDetentChanged(OnSheetDetentChanged value) const;
+};
+class RNSScreenContainerEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSScreenContentWrapperEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSScreenFooterEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSScreenEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnAppear {
+      
+    };
+
+  struct OnDisappear {
+      
+    };
+
+  struct OnDismissed {
+      int dismissCount;
+    };
+
+  struct OnNativeDismissCancelled {
+      int dismissCount;
+    };
+
+  struct OnWillAppear {
+      
+    };
+
+  struct OnWillDisappear {
+      
+    };
+
+  struct OnHeaderHeightChange {
+      double headerHeight;
+    };
+
+  struct OnTransitionProgress {
+      double progress;
+    int closing;
+    int goingForward;
+    };
+
+  struct OnGestureCancel {
+      
+    };
+
+  struct OnHeaderBackButtonClicked {
+      
+    };
+
+  struct OnSheetDetentChanged {
+      int index;
+    bool isStable;
+    };
+  void onAppear(OnAppear value) const;
+
+  void onDisappear(OnDisappear value) const;
+
+  void onDismissed(OnDismissed value) const;
+
+  void onNativeDismissCancelled(OnNativeDismissCancelled value) const;
+
+  void onWillAppear(OnWillAppear value) const;
+
+  void onWillDisappear(OnWillDisappear value) const;
+
+  void onHeaderHeightChange(OnHeaderHeightChange value) const;
+
+  void onTransitionProgress(OnTransitionProgress value) const;
+
+  void onGestureCancel(OnGestureCancel value) const;
+
+  void onHeaderBackButtonClicked(OnHeaderBackButtonClicked value) const;
+
+  void onSheetDetentChanged(OnSheetDetentChanged value) const;
+};
+class RNSScreenNavigationContainerEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSScreenStackHeaderConfigEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnAttached {
+      
+    };
+
+  struct OnDetached {
+      
+    };
+  void onAttached(OnAttached value) const;
+
+  void onDetached(OnDetached value) const;
+};
+class RNSScreenStackHeaderSubviewEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  
+  
+};
+class RNSScreenStackEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnFinishTransitioning {
+      
+    };
+  void onFinishTransitioning(OnFinishTransitioning value) const;
+};
+class RNSSearchBarEventEmitter : public ViewEventEmitter {
+ public:
+  using ViewEventEmitter::ViewEventEmitter;
+
+  struct OnSearchFocus {
+      
+    };
+
+  struct OnSearchBlur {
+      
+    };
+
+  struct OnSearchButtonPress {
+      std::string text;
+    };
+
+  struct OnCancelButtonPress {
+      
+    };
+
+  struct OnChangeText {
+      std::string text;
+    };
+
+  struct OnClose {
+      
+    };
+
+  struct OnOpen {
+      
+    };
+  void onSearchFocus(OnSearchFocus value) const;
+
+  void onSearchBlur(OnSearchBlur value) const;
+
+  void onSearchButtonPress(OnSearchButtonPress value) const;
+
+  void onCancelButtonPress(OnCancelButtonPress value) const;
+
+  void onChangeText(OnChangeText value) const;
+
+  void onClose(OnClose value) const;
+
+  void onOpen(OnOpen value) const;
+};
+} // namespace facebook::react
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/Props.cpp b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/Props.cpp
new file mode 100644
index 0000000..f85b5e2
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/Props.cpp
@@ -0,0 +1,196 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsCpp.js
+ */
+
+#include <react/renderer/components/rnscreens/Props.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/propsConversions.h>
+
+namespace facebook::react {
+
+RNSFullWindowOverlayProps::RNSFullWindowOverlayProps(
+    const PropsParserContext &context,
+    const RNSFullWindowOverlayProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps)
+
+    
+      {}
+RNSModalScreenProps::RNSModalScreenProps(
+    const PropsParserContext &context,
+    const RNSModalScreenProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    sheetAllowedDetents(convertRawProp(context, rawProps, "sheetAllowedDetents", sourceProps.sheetAllowedDetents, {})),
+    sheetLargestUndimmedDetent(convertRawProp(context, rawProps, "sheetLargestUndimmedDetent", sourceProps.sheetLargestUndimmedDetent, {-1})),
+    sheetGrabberVisible(convertRawProp(context, rawProps, "sheetGrabberVisible", sourceProps.sheetGrabberVisible, {false})),
+    sheetCornerRadius(convertRawProp(context, rawProps, "sheetCornerRadius", sourceProps.sheetCornerRadius, {-1.0})),
+    sheetExpandsWhenScrolledToEdge(convertRawProp(context, rawProps, "sheetExpandsWhenScrolledToEdge", sourceProps.sheetExpandsWhenScrolledToEdge, {false})),
+    sheetInitialDetent(convertRawProp(context, rawProps, "sheetInitialDetent", sourceProps.sheetInitialDetent, {0})),
+    sheetElevation(convertRawProp(context, rawProps, "sheetElevation", sourceProps.sheetElevation, {24})),
+    customAnimationOnSwipe(convertRawProp(context, rawProps, "customAnimationOnSwipe", sourceProps.customAnimationOnSwipe, {false})),
+    fullScreenSwipeEnabled(convertRawProp(context, rawProps, "fullScreenSwipeEnabled", sourceProps.fullScreenSwipeEnabled, {false})),
+    fullScreenSwipeShadowEnabled(convertRawProp(context, rawProps, "fullScreenSwipeShadowEnabled", sourceProps.fullScreenSwipeShadowEnabled, {true})),
+    homeIndicatorHidden(convertRawProp(context, rawProps, "homeIndicatorHidden", sourceProps.homeIndicatorHidden, {false})),
+    preventNativeDismiss(convertRawProp(context, rawProps, "preventNativeDismiss", sourceProps.preventNativeDismiss, {false})),
+    gestureEnabled(convertRawProp(context, rawProps, "gestureEnabled", sourceProps.gestureEnabled, {true})),
+    statusBarColor(convertRawProp(context, rawProps, "statusBarColor", sourceProps.statusBarColor, {})),
+    statusBarHidden(convertRawProp(context, rawProps, "statusBarHidden", sourceProps.statusBarHidden, {false})),
+    screenOrientation(convertRawProp(context, rawProps, "screenOrientation", sourceProps.screenOrientation, {})),
+    statusBarAnimation(convertRawProp(context, rawProps, "statusBarAnimation", sourceProps.statusBarAnimation, {})),
+    statusBarStyle(convertRawProp(context, rawProps, "statusBarStyle", sourceProps.statusBarStyle, {})),
+    statusBarTranslucent(convertRawProp(context, rawProps, "statusBarTranslucent", sourceProps.statusBarTranslucent, {false})),
+    gestureResponseDistance(convertRawProp(context, rawProps, "gestureResponseDistance", sourceProps.gestureResponseDistance, {})),
+    stackPresentation(convertRawProp(context, rawProps, "stackPresentation", sourceProps.stackPresentation, {RNSModalScreenStackPresentation::Push})),
+    stackAnimation(convertRawProp(context, rawProps, "stackAnimation", sourceProps.stackAnimation, {RNSModalScreenStackAnimation::Default})),
+    transitionDuration(convertRawProp(context, rawProps, "transitionDuration", sourceProps.transitionDuration, {500})),
+    replaceAnimation(convertRawProp(context, rawProps, "replaceAnimation", sourceProps.replaceAnimation, {RNSModalScreenReplaceAnimation::Pop})),
+    swipeDirection(convertRawProp(context, rawProps, "swipeDirection", sourceProps.swipeDirection, {RNSModalScreenSwipeDirection::Horizontal})),
+    hideKeyboardOnSwipe(convertRawProp(context, rawProps, "hideKeyboardOnSwipe", sourceProps.hideKeyboardOnSwipe, {false})),
+    activityState(convertRawProp(context, rawProps, "activityState", sourceProps.activityState, {-1.0})),
+    navigationBarColor(convertRawProp(context, rawProps, "navigationBarColor", sourceProps.navigationBarColor, {})),
+    navigationBarTranslucent(convertRawProp(context, rawProps, "navigationBarTranslucent", sourceProps.navigationBarTranslucent, {false})),
+    navigationBarHidden(convertRawProp(context, rawProps, "navigationBarHidden", sourceProps.navigationBarHidden, {false})),
+    nativeBackButtonDismissalEnabled(convertRawProp(context, rawProps, "nativeBackButtonDismissalEnabled", sourceProps.nativeBackButtonDismissalEnabled, {false}))
+      {}
+RNSScreenContainerProps::RNSScreenContainerProps(
+    const PropsParserContext &context,
+    const RNSScreenContainerProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps)
+
+    
+      {}
+RNSScreenContentWrapperProps::RNSScreenContentWrapperProps(
+    const PropsParserContext &context,
+    const RNSScreenContentWrapperProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps)
+
+    
+      {}
+RNSScreenFooterProps::RNSScreenFooterProps(
+    const PropsParserContext &context,
+    const RNSScreenFooterProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps)
+
+    
+      {}
+RNSScreenProps::RNSScreenProps(
+    const PropsParserContext &context,
+    const RNSScreenProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    sheetAllowedDetents(convertRawProp(context, rawProps, "sheetAllowedDetents", sourceProps.sheetAllowedDetents, {})),
+    sheetLargestUndimmedDetent(convertRawProp(context, rawProps, "sheetLargestUndimmedDetent", sourceProps.sheetLargestUndimmedDetent, {-1})),
+    sheetGrabberVisible(convertRawProp(context, rawProps, "sheetGrabberVisible", sourceProps.sheetGrabberVisible, {false})),
+    sheetCornerRadius(convertRawProp(context, rawProps, "sheetCornerRadius", sourceProps.sheetCornerRadius, {-1.0})),
+    sheetExpandsWhenScrolledToEdge(convertRawProp(context, rawProps, "sheetExpandsWhenScrolledToEdge", sourceProps.sheetExpandsWhenScrolledToEdge, {false})),
+    sheetInitialDetent(convertRawProp(context, rawProps, "sheetInitialDetent", sourceProps.sheetInitialDetent, {0})),
+    sheetElevation(convertRawProp(context, rawProps, "sheetElevation", sourceProps.sheetElevation, {24})),
+    customAnimationOnSwipe(convertRawProp(context, rawProps, "customAnimationOnSwipe", sourceProps.customAnimationOnSwipe, {false})),
+    fullScreenSwipeEnabled(convertRawProp(context, rawProps, "fullScreenSwipeEnabled", sourceProps.fullScreenSwipeEnabled, {false})),
+    fullScreenSwipeShadowEnabled(convertRawProp(context, rawProps, "fullScreenSwipeShadowEnabled", sourceProps.fullScreenSwipeShadowEnabled, {true})),
+    homeIndicatorHidden(convertRawProp(context, rawProps, "homeIndicatorHidden", sourceProps.homeIndicatorHidden, {false})),
+    preventNativeDismiss(convertRawProp(context, rawProps, "preventNativeDismiss", sourceProps.preventNativeDismiss, {false})),
+    gestureEnabled(convertRawProp(context, rawProps, "gestureEnabled", sourceProps.gestureEnabled, {true})),
+    statusBarColor(convertRawProp(context, rawProps, "statusBarColor", sourceProps.statusBarColor, {})),
+    statusBarHidden(convertRawProp(context, rawProps, "statusBarHidden", sourceProps.statusBarHidden, {false})),
+    screenOrientation(convertRawProp(context, rawProps, "screenOrientation", sourceProps.screenOrientation, {})),
+    statusBarAnimation(convertRawProp(context, rawProps, "statusBarAnimation", sourceProps.statusBarAnimation, {})),
+    statusBarStyle(convertRawProp(context, rawProps, "statusBarStyle", sourceProps.statusBarStyle, {})),
+    statusBarTranslucent(convertRawProp(context, rawProps, "statusBarTranslucent", sourceProps.statusBarTranslucent, {false})),
+    gestureResponseDistance(convertRawProp(context, rawProps, "gestureResponseDistance", sourceProps.gestureResponseDistance, {})),
+    stackPresentation(convertRawProp(context, rawProps, "stackPresentation", sourceProps.stackPresentation, {RNSScreenStackPresentation::Push})),
+    stackAnimation(convertRawProp(context, rawProps, "stackAnimation", sourceProps.stackAnimation, {RNSScreenStackAnimation::Default})),
+    transitionDuration(convertRawProp(context, rawProps, "transitionDuration", sourceProps.transitionDuration, {500})),
+    replaceAnimation(convertRawProp(context, rawProps, "replaceAnimation", sourceProps.replaceAnimation, {RNSScreenReplaceAnimation::Pop})),
+    swipeDirection(convertRawProp(context, rawProps, "swipeDirection", sourceProps.swipeDirection, {RNSScreenSwipeDirection::Horizontal})),
+    hideKeyboardOnSwipe(convertRawProp(context, rawProps, "hideKeyboardOnSwipe", sourceProps.hideKeyboardOnSwipe, {false})),
+    activityState(convertRawProp(context, rawProps, "activityState", sourceProps.activityState, {-1.0})),
+    navigationBarColor(convertRawProp(context, rawProps, "navigationBarColor", sourceProps.navigationBarColor, {})),
+    navigationBarTranslucent(convertRawProp(context, rawProps, "navigationBarTranslucent", sourceProps.navigationBarTranslucent, {false})),
+    navigationBarHidden(convertRawProp(context, rawProps, "navigationBarHidden", sourceProps.navigationBarHidden, {false})),
+    nativeBackButtonDismissalEnabled(convertRawProp(context, rawProps, "nativeBackButtonDismissalEnabled", sourceProps.nativeBackButtonDismissalEnabled, {false}))
+      {}
+RNSScreenNavigationContainerProps::RNSScreenNavigationContainerProps(
+    const PropsParserContext &context,
+    const RNSScreenNavigationContainerProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps)
+
+    
+      {}
+RNSScreenStackHeaderConfigProps::RNSScreenStackHeaderConfigProps(
+    const PropsParserContext &context,
+    const RNSScreenStackHeaderConfigProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    backgroundColor(convertRawProp(context, rawProps, "backgroundColor", sourceProps.backgroundColor, {})),
+    backTitle(convertRawProp(context, rawProps, "backTitle", sourceProps.backTitle, {})),
+    backTitleFontFamily(convertRawProp(context, rawProps, "backTitleFontFamily", sourceProps.backTitleFontFamily, {})),
+    backTitleFontSize(convertRawProp(context, rawProps, "backTitleFontSize", sourceProps.backTitleFontSize, {0})),
+    backTitleVisible(convertRawProp(context, rawProps, "backTitleVisible", sourceProps.backTitleVisible, {true})),
+    color(convertRawProp(context, rawProps, "color", sourceProps.color, {})),
+    direction(convertRawProp(context, rawProps, "direction", sourceProps.direction, {RNSScreenStackHeaderConfigDirection::Ltr})),
+    hidden(convertRawProp(context, rawProps, "hidden", sourceProps.hidden, {false})),
+    hideShadow(convertRawProp(context, rawProps, "hideShadow", sourceProps.hideShadow, {false})),
+    largeTitle(convertRawProp(context, rawProps, "largeTitle", sourceProps.largeTitle, {false})),
+    largeTitleFontFamily(convertRawProp(context, rawProps, "largeTitleFontFamily", sourceProps.largeTitleFontFamily, {})),
+    largeTitleFontSize(convertRawProp(context, rawProps, "largeTitleFontSize", sourceProps.largeTitleFontSize, {0})),
+    largeTitleFontWeight(convertRawProp(context, rawProps, "largeTitleFontWeight", sourceProps.largeTitleFontWeight, {})),
+    largeTitleBackgroundColor(convertRawProp(context, rawProps, "largeTitleBackgroundColor", sourceProps.largeTitleBackgroundColor, {})),
+    largeTitleHideShadow(convertRawProp(context, rawProps, "largeTitleHideShadow", sourceProps.largeTitleHideShadow, {false})),
+    largeTitleColor(convertRawProp(context, rawProps, "largeTitleColor", sourceProps.largeTitleColor, {})),
+    translucent(convertRawProp(context, rawProps, "translucent", sourceProps.translucent, {false})),
+    title(convertRawProp(context, rawProps, "title", sourceProps.title, {})),
+    titleFontFamily(convertRawProp(context, rawProps, "titleFontFamily", sourceProps.titleFontFamily, {})),
+    titleFontSize(convertRawProp(context, rawProps, "titleFontSize", sourceProps.titleFontSize, {0})),
+    titleFontWeight(convertRawProp(context, rawProps, "titleFontWeight", sourceProps.titleFontWeight, {})),
+    titleColor(convertRawProp(context, rawProps, "titleColor", sourceProps.titleColor, {})),
+    disableBackButtonMenu(convertRawProp(context, rawProps, "disableBackButtonMenu", sourceProps.disableBackButtonMenu, {false})),
+    backButtonDisplayMode(convertRawProp(context, rawProps, "backButtonDisplayMode", sourceProps.backButtonDisplayMode, {RNSScreenStackHeaderConfigBackButtonDisplayMode::Default})),
+    hideBackButton(convertRawProp(context, rawProps, "hideBackButton", sourceProps.hideBackButton, {false})),
+    backButtonInCustomView(convertRawProp(context, rawProps, "backButtonInCustomView", sourceProps.backButtonInCustomView, {false})),
+    blurEffect(convertRawProp(context, rawProps, "blurEffect", sourceProps.blurEffect, {RNSScreenStackHeaderConfigBlurEffect::None})),
+    topInsetEnabled(convertRawProp(context, rawProps, "topInsetEnabled", sourceProps.topInsetEnabled, {false}))
+      {}
+RNSScreenStackHeaderSubviewProps::RNSScreenStackHeaderSubviewProps(
+    const PropsParserContext &context,
+    const RNSScreenStackHeaderSubviewProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    type(convertRawProp(context, rawProps, "type", sourceProps.type, {RNSScreenStackHeaderSubviewType::Left}))
+      {}
+RNSScreenStackProps::RNSScreenStackProps(
+    const PropsParserContext &context,
+    const RNSScreenStackProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps)
+
+    
+      {}
+RNSSearchBarProps::RNSSearchBarProps(
+    const PropsParserContext &context,
+    const RNSSearchBarProps &sourceProps,
+    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),
+
+    hideWhenScrolling(convertRawProp(context, rawProps, "hideWhenScrolling", sourceProps.hideWhenScrolling, {false})),
+    autoCapitalize(convertRawProp(context, rawProps, "autoCapitalize", sourceProps.autoCapitalize, {RNSSearchBarAutoCapitalize::None})),
+    placeholder(convertRawProp(context, rawProps, "placeholder", sourceProps.placeholder, {})),
+    placement(convertRawProp(context, rawProps, "placement", sourceProps.placement, {RNSSearchBarPlacement::Stacked})),
+    obscureBackground(convertRawProp(context, rawProps, "obscureBackground", sourceProps.obscureBackground, {false})),
+    hideNavigationBar(convertRawProp(context, rawProps, "hideNavigationBar", sourceProps.hideNavigationBar, {false})),
+    cancelButtonText(convertRawProp(context, rawProps, "cancelButtonText", sourceProps.cancelButtonText, {})),
+    barTintColor(convertRawProp(context, rawProps, "barTintColor", sourceProps.barTintColor, {})),
+    tintColor(convertRawProp(context, rawProps, "tintColor", sourceProps.tintColor, {})),
+    textColor(convertRawProp(context, rawProps, "textColor", sourceProps.textColor, {})),
+    disableBackButtonOverride(convertRawProp(context, rawProps, "disableBackButtonOverride", sourceProps.disableBackButtonOverride, {false})),
+    inputType(convertRawProp(context, rawProps, "inputType", sourceProps.inputType, {})),
+    hintTextColor(convertRawProp(context, rawProps, "hintTextColor", sourceProps.hintTextColor, {})),
+    headerIconColor(convertRawProp(context, rawProps, "headerIconColor", sourceProps.headerIconColor, {})),
+    shouldShowHintSearchIcon(convertRawProp(context, rawProps, "shouldShowHintSearchIcon", sourceProps.shouldShowHintSearchIcon, {true}))
+      {}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/Props.h b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/Props.h
new file mode 100644
index 0000000..dd2a46c
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/Props.h
@@ -0,0 +1,616 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GeneratePropsH.js
+ */
+#pragma once
+
+#include <react/renderer/components/view/ViewProps.h>
+#include <react/renderer/core/PropsParserContext.h>
+#include <react/renderer/core/propsConversions.h>
+#include <react/renderer/graphics/Color.h>
+#include <vector>
+
+namespace facebook::react {
+
+class RNSFullWindowOverlayProps final : public ViewProps {
+ public:
+  RNSFullWindowOverlayProps() = default;
+  RNSFullWindowOverlayProps(const PropsParserContext& context, const RNSFullWindowOverlayProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  
+};
+
+enum class RNSModalScreenStackPresentation { Push, Modal, TransparentModal, FullScreenModal, FormSheet, ContainedModal, ContainedTransparentModal };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSModalScreenStackPresentation &result) {
+  auto string = (std::string)value;
+  if (string == "push") { result = RNSModalScreenStackPresentation::Push; return; }
+  if (string == "modal") { result = RNSModalScreenStackPresentation::Modal; return; }
+  if (string == "transparentModal") { result = RNSModalScreenStackPresentation::TransparentModal; return; }
+  if (string == "fullScreenModal") { result = RNSModalScreenStackPresentation::FullScreenModal; return; }
+  if (string == "formSheet") { result = RNSModalScreenStackPresentation::FormSheet; return; }
+  if (string == "containedModal") { result = RNSModalScreenStackPresentation::ContainedModal; return; }
+  if (string == "containedTransparentModal") { result = RNSModalScreenStackPresentation::ContainedTransparentModal; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSModalScreenStackPresentation &value) {
+  switch (value) {
+    case RNSModalScreenStackPresentation::Push: return "push";
+    case RNSModalScreenStackPresentation::Modal: return "modal";
+    case RNSModalScreenStackPresentation::TransparentModal: return "transparentModal";
+    case RNSModalScreenStackPresentation::FullScreenModal: return "fullScreenModal";
+    case RNSModalScreenStackPresentation::FormSheet: return "formSheet";
+    case RNSModalScreenStackPresentation::ContainedModal: return "containedModal";
+    case RNSModalScreenStackPresentation::ContainedTransparentModal: return "containedTransparentModal";
+  }
+}
+enum class RNSModalScreenStackAnimation { Default, Flip, Simple_push, None, Fade, Slide_from_right, Slide_from_left, Slide_from_bottom, Fade_from_bottom, Ios_from_right, Ios_from_left };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSModalScreenStackAnimation &result) {
+  auto string = (std::string)value;
+  if (string == "default") { result = RNSModalScreenStackAnimation::Default; return; }
+  if (string == "flip") { result = RNSModalScreenStackAnimation::Flip; return; }
+  if (string == "simple_push") { result = RNSModalScreenStackAnimation::Simple_push; return; }
+  if (string == "none") { result = RNSModalScreenStackAnimation::None; return; }
+  if (string == "fade") { result = RNSModalScreenStackAnimation::Fade; return; }
+  if (string == "slide_from_right") { result = RNSModalScreenStackAnimation::Slide_from_right; return; }
+  if (string == "slide_from_left") { result = RNSModalScreenStackAnimation::Slide_from_left; return; }
+  if (string == "slide_from_bottom") { result = RNSModalScreenStackAnimation::Slide_from_bottom; return; }
+  if (string == "fade_from_bottom") { result = RNSModalScreenStackAnimation::Fade_from_bottom; return; }
+  if (string == "ios_from_right") { result = RNSModalScreenStackAnimation::Ios_from_right; return; }
+  if (string == "ios_from_left") { result = RNSModalScreenStackAnimation::Ios_from_left; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSModalScreenStackAnimation &value) {
+  switch (value) {
+    case RNSModalScreenStackAnimation::Default: return "default";
+    case RNSModalScreenStackAnimation::Flip: return "flip";
+    case RNSModalScreenStackAnimation::Simple_push: return "simple_push";
+    case RNSModalScreenStackAnimation::None: return "none";
+    case RNSModalScreenStackAnimation::Fade: return "fade";
+    case RNSModalScreenStackAnimation::Slide_from_right: return "slide_from_right";
+    case RNSModalScreenStackAnimation::Slide_from_left: return "slide_from_left";
+    case RNSModalScreenStackAnimation::Slide_from_bottom: return "slide_from_bottom";
+    case RNSModalScreenStackAnimation::Fade_from_bottom: return "fade_from_bottom";
+    case RNSModalScreenStackAnimation::Ios_from_right: return "ios_from_right";
+    case RNSModalScreenStackAnimation::Ios_from_left: return "ios_from_left";
+  }
+}
+enum class RNSModalScreenReplaceAnimation { Pop, Push };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSModalScreenReplaceAnimation &result) {
+  auto string = (std::string)value;
+  if (string == "pop") { result = RNSModalScreenReplaceAnimation::Pop; return; }
+  if (string == "push") { result = RNSModalScreenReplaceAnimation::Push; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSModalScreenReplaceAnimation &value) {
+  switch (value) {
+    case RNSModalScreenReplaceAnimation::Pop: return "pop";
+    case RNSModalScreenReplaceAnimation::Push: return "push";
+  }
+}
+enum class RNSModalScreenSwipeDirection { Vertical, Horizontal };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSModalScreenSwipeDirection &result) {
+  auto string = (std::string)value;
+  if (string == "vertical") { result = RNSModalScreenSwipeDirection::Vertical; return; }
+  if (string == "horizontal") { result = RNSModalScreenSwipeDirection::Horizontal; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSModalScreenSwipeDirection &value) {
+  switch (value) {
+    case RNSModalScreenSwipeDirection::Vertical: return "vertical";
+    case RNSModalScreenSwipeDirection::Horizontal: return "horizontal";
+  }
+}
+struct RNSModalScreenGestureResponseDistanceStruct {
+  Float start{0.0};
+  Float end{0.0};
+  Float top{0.0};
+  Float bottom{0.0};
+};
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSModalScreenGestureResponseDistanceStruct &result) {
+  auto map = (std::unordered_map<std::string, RawValue>)value;
+
+  auto tmp_start = map.find("start");
+  if (tmp_start != map.end()) {
+    fromRawValue(context, tmp_start->second, result.start);
+  }
+  auto tmp_end = map.find("end");
+  if (tmp_end != map.end()) {
+    fromRawValue(context, tmp_end->second, result.end);
+  }
+  auto tmp_top = map.find("top");
+  if (tmp_top != map.end()) {
+    fromRawValue(context, tmp_top->second, result.top);
+  }
+  auto tmp_bottom = map.find("bottom");
+  if (tmp_bottom != map.end()) {
+    fromRawValue(context, tmp_bottom->second, result.bottom);
+  }
+}
+
+static inline std::string toString(const RNSModalScreenGestureResponseDistanceStruct &value) {
+  return "[Object RNSModalScreenGestureResponseDistanceStruct]";
+}
+class RNSModalScreenProps final : public ViewProps {
+ public:
+  RNSModalScreenProps() = default;
+  RNSModalScreenProps(const PropsParserContext& context, const RNSModalScreenProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::vector<Float> sheetAllowedDetents{};
+  int sheetLargestUndimmedDetent{-1};
+  bool sheetGrabberVisible{false};
+  Float sheetCornerRadius{-1.0};
+  bool sheetExpandsWhenScrolledToEdge{false};
+  int sheetInitialDetent{0};
+  int sheetElevation{24};
+  bool customAnimationOnSwipe{false};
+  bool fullScreenSwipeEnabled{false};
+  bool fullScreenSwipeShadowEnabled{true};
+  bool homeIndicatorHidden{false};
+  bool preventNativeDismiss{false};
+  bool gestureEnabled{true};
+  SharedColor statusBarColor{};
+  bool statusBarHidden{false};
+  std::string screenOrientation{};
+  std::string statusBarAnimation{};
+  std::string statusBarStyle{};
+  bool statusBarTranslucent{false};
+  RNSModalScreenGestureResponseDistanceStruct gestureResponseDistance{};
+  RNSModalScreenStackPresentation stackPresentation{RNSModalScreenStackPresentation::Push};
+  RNSModalScreenStackAnimation stackAnimation{RNSModalScreenStackAnimation::Default};
+  int transitionDuration{500};
+  RNSModalScreenReplaceAnimation replaceAnimation{RNSModalScreenReplaceAnimation::Pop};
+  RNSModalScreenSwipeDirection swipeDirection{RNSModalScreenSwipeDirection::Horizontal};
+  bool hideKeyboardOnSwipe{false};
+  Float activityState{-1.0};
+  SharedColor navigationBarColor{};
+  bool navigationBarTranslucent{false};
+  bool navigationBarHidden{false};
+  bool nativeBackButtonDismissalEnabled{false};
+};
+
+class RNSScreenContainerProps final : public ViewProps {
+ public:
+  RNSScreenContainerProps() = default;
+  RNSScreenContainerProps(const PropsParserContext& context, const RNSScreenContainerProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  
+};
+
+class RNSScreenContentWrapperProps final : public ViewProps {
+ public:
+  RNSScreenContentWrapperProps() = default;
+  RNSScreenContentWrapperProps(const PropsParserContext& context, const RNSScreenContentWrapperProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  
+};
+
+class RNSScreenFooterProps final : public ViewProps {
+ public:
+  RNSScreenFooterProps() = default;
+  RNSScreenFooterProps(const PropsParserContext& context, const RNSScreenFooterProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  
+};
+
+enum class RNSScreenStackPresentation { Push, Modal, TransparentModal, FullScreenModal, FormSheet, ContainedModal, ContainedTransparentModal };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSScreenStackPresentation &result) {
+  auto string = (std::string)value;
+  if (string == "push") { result = RNSScreenStackPresentation::Push; return; }
+  if (string == "modal") { result = RNSScreenStackPresentation::Modal; return; }
+  if (string == "transparentModal") { result = RNSScreenStackPresentation::TransparentModal; return; }
+  if (string == "fullScreenModal") { result = RNSScreenStackPresentation::FullScreenModal; return; }
+  if (string == "formSheet") { result = RNSScreenStackPresentation::FormSheet; return; }
+  if (string == "containedModal") { result = RNSScreenStackPresentation::ContainedModal; return; }
+  if (string == "containedTransparentModal") { result = RNSScreenStackPresentation::ContainedTransparentModal; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSScreenStackPresentation &value) {
+  switch (value) {
+    case RNSScreenStackPresentation::Push: return "push";
+    case RNSScreenStackPresentation::Modal: return "modal";
+    case RNSScreenStackPresentation::TransparentModal: return "transparentModal";
+    case RNSScreenStackPresentation::FullScreenModal: return "fullScreenModal";
+    case RNSScreenStackPresentation::FormSheet: return "formSheet";
+    case RNSScreenStackPresentation::ContainedModal: return "containedModal";
+    case RNSScreenStackPresentation::ContainedTransparentModal: return "containedTransparentModal";
+  }
+}
+enum class RNSScreenStackAnimation { Default, Flip, Simple_push, None, Fade, Slide_from_right, Slide_from_left, Slide_from_bottom, Fade_from_bottom, Ios_from_right, Ios_from_left };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSScreenStackAnimation &result) {
+  auto string = (std::string)value;
+  if (string == "default") { result = RNSScreenStackAnimation::Default; return; }
+  if (string == "flip") { result = RNSScreenStackAnimation::Flip; return; }
+  if (string == "simple_push") { result = RNSScreenStackAnimation::Simple_push; return; }
+  if (string == "none") { result = RNSScreenStackAnimation::None; return; }
+  if (string == "fade") { result = RNSScreenStackAnimation::Fade; return; }
+  if (string == "slide_from_right") { result = RNSScreenStackAnimation::Slide_from_right; return; }
+  if (string == "slide_from_left") { result = RNSScreenStackAnimation::Slide_from_left; return; }
+  if (string == "slide_from_bottom") { result = RNSScreenStackAnimation::Slide_from_bottom; return; }
+  if (string == "fade_from_bottom") { result = RNSScreenStackAnimation::Fade_from_bottom; return; }
+  if (string == "ios_from_right") { result = RNSScreenStackAnimation::Ios_from_right; return; }
+  if (string == "ios_from_left") { result = RNSScreenStackAnimation::Ios_from_left; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSScreenStackAnimation &value) {
+  switch (value) {
+    case RNSScreenStackAnimation::Default: return "default";
+    case RNSScreenStackAnimation::Flip: return "flip";
+    case RNSScreenStackAnimation::Simple_push: return "simple_push";
+    case RNSScreenStackAnimation::None: return "none";
+    case RNSScreenStackAnimation::Fade: return "fade";
+    case RNSScreenStackAnimation::Slide_from_right: return "slide_from_right";
+    case RNSScreenStackAnimation::Slide_from_left: return "slide_from_left";
+    case RNSScreenStackAnimation::Slide_from_bottom: return "slide_from_bottom";
+    case RNSScreenStackAnimation::Fade_from_bottom: return "fade_from_bottom";
+    case RNSScreenStackAnimation::Ios_from_right: return "ios_from_right";
+    case RNSScreenStackAnimation::Ios_from_left: return "ios_from_left";
+  }
+}
+enum class RNSScreenReplaceAnimation { Pop, Push };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSScreenReplaceAnimation &result) {
+  auto string = (std::string)value;
+  if (string == "pop") { result = RNSScreenReplaceAnimation::Pop; return; }
+  if (string == "push") { result = RNSScreenReplaceAnimation::Push; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSScreenReplaceAnimation &value) {
+  switch (value) {
+    case RNSScreenReplaceAnimation::Pop: return "pop";
+    case RNSScreenReplaceAnimation::Push: return "push";
+  }
+}
+enum class RNSScreenSwipeDirection { Vertical, Horizontal };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSScreenSwipeDirection &result) {
+  auto string = (std::string)value;
+  if (string == "vertical") { result = RNSScreenSwipeDirection::Vertical; return; }
+  if (string == "horizontal") { result = RNSScreenSwipeDirection::Horizontal; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSScreenSwipeDirection &value) {
+  switch (value) {
+    case RNSScreenSwipeDirection::Vertical: return "vertical";
+    case RNSScreenSwipeDirection::Horizontal: return "horizontal";
+  }
+}
+struct RNSScreenGestureResponseDistanceStruct {
+  Float start{0.0};
+  Float end{0.0};
+  Float top{0.0};
+  Float bottom{0.0};
+};
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSScreenGestureResponseDistanceStruct &result) {
+  auto map = (std::unordered_map<std::string, RawValue>)value;
+
+  auto tmp_start = map.find("start");
+  if (tmp_start != map.end()) {
+    fromRawValue(context, tmp_start->second, result.start);
+  }
+  auto tmp_end = map.find("end");
+  if (tmp_end != map.end()) {
+    fromRawValue(context, tmp_end->second, result.end);
+  }
+  auto tmp_top = map.find("top");
+  if (tmp_top != map.end()) {
+    fromRawValue(context, tmp_top->second, result.top);
+  }
+  auto tmp_bottom = map.find("bottom");
+  if (tmp_bottom != map.end()) {
+    fromRawValue(context, tmp_bottom->second, result.bottom);
+  }
+}
+
+static inline std::string toString(const RNSScreenGestureResponseDistanceStruct &value) {
+  return "[Object RNSScreenGestureResponseDistanceStruct]";
+}
+class RNSScreenProps final : public ViewProps {
+ public:
+  RNSScreenProps() = default;
+  RNSScreenProps(const PropsParserContext& context, const RNSScreenProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  std::vector<Float> sheetAllowedDetents{};
+  int sheetLargestUndimmedDetent{-1};
+  bool sheetGrabberVisible{false};
+  Float sheetCornerRadius{-1.0};
+  bool sheetExpandsWhenScrolledToEdge{false};
+  int sheetInitialDetent{0};
+  int sheetElevation{24};
+  bool customAnimationOnSwipe{false};
+  bool fullScreenSwipeEnabled{false};
+  bool fullScreenSwipeShadowEnabled{true};
+  bool homeIndicatorHidden{false};
+  bool preventNativeDismiss{false};
+  bool gestureEnabled{true};
+  SharedColor statusBarColor{};
+  bool statusBarHidden{false};
+  std::string screenOrientation{};
+  std::string statusBarAnimation{};
+  std::string statusBarStyle{};
+  bool statusBarTranslucent{false};
+  RNSScreenGestureResponseDistanceStruct gestureResponseDistance{};
+  RNSScreenStackPresentation stackPresentation{RNSScreenStackPresentation::Push};
+  RNSScreenStackAnimation stackAnimation{RNSScreenStackAnimation::Default};
+  int transitionDuration{500};
+  RNSScreenReplaceAnimation replaceAnimation{RNSScreenReplaceAnimation::Pop};
+  RNSScreenSwipeDirection swipeDirection{RNSScreenSwipeDirection::Horizontal};
+  bool hideKeyboardOnSwipe{false};
+  Float activityState{-1.0};
+  SharedColor navigationBarColor{};
+  bool navigationBarTranslucent{false};
+  bool navigationBarHidden{false};
+  bool nativeBackButtonDismissalEnabled{false};
+};
+
+class RNSScreenNavigationContainerProps final : public ViewProps {
+ public:
+  RNSScreenNavigationContainerProps() = default;
+  RNSScreenNavigationContainerProps(const PropsParserContext& context, const RNSScreenNavigationContainerProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  
+};
+
+enum class RNSScreenStackHeaderConfigDirection { Rtl, Ltr };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSScreenStackHeaderConfigDirection &result) {
+  auto string = (std::string)value;
+  if (string == "rtl") { result = RNSScreenStackHeaderConfigDirection::Rtl; return; }
+  if (string == "ltr") { result = RNSScreenStackHeaderConfigDirection::Ltr; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSScreenStackHeaderConfigDirection &value) {
+  switch (value) {
+    case RNSScreenStackHeaderConfigDirection::Rtl: return "rtl";
+    case RNSScreenStackHeaderConfigDirection::Ltr: return "ltr";
+  }
+}
+enum class RNSScreenStackHeaderConfigBackButtonDisplayMode { Minimal, Default, Generic };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSScreenStackHeaderConfigBackButtonDisplayMode &result) {
+  auto string = (std::string)value;
+  if (string == "minimal") { result = RNSScreenStackHeaderConfigBackButtonDisplayMode::Minimal; return; }
+  if (string == "default") { result = RNSScreenStackHeaderConfigBackButtonDisplayMode::Default; return; }
+  if (string == "generic") { result = RNSScreenStackHeaderConfigBackButtonDisplayMode::Generic; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSScreenStackHeaderConfigBackButtonDisplayMode &value) {
+  switch (value) {
+    case RNSScreenStackHeaderConfigBackButtonDisplayMode::Minimal: return "minimal";
+    case RNSScreenStackHeaderConfigBackButtonDisplayMode::Default: return "default";
+    case RNSScreenStackHeaderConfigBackButtonDisplayMode::Generic: return "generic";
+  }
+}
+enum class RNSScreenStackHeaderConfigBlurEffect { None, ExtraLight, Light, Dark, Regular, Prominent, SystemUltraThinMaterial, SystemThinMaterial, SystemMaterial, SystemThickMaterial, SystemChromeMaterial, SystemUltraThinMaterialLight, SystemThinMaterialLight, SystemMaterialLight, SystemThickMaterialLight, SystemChromeMaterialLight, SystemUltraThinMaterialDark, SystemThinMaterialDark, SystemMaterialDark, SystemThickMaterialDark, SystemChromeMaterialDark };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSScreenStackHeaderConfigBlurEffect &result) {
+  auto string = (std::string)value;
+  if (string == "none") { result = RNSScreenStackHeaderConfigBlurEffect::None; return; }
+  if (string == "extraLight") { result = RNSScreenStackHeaderConfigBlurEffect::ExtraLight; return; }
+  if (string == "light") { result = RNSScreenStackHeaderConfigBlurEffect::Light; return; }
+  if (string == "dark") { result = RNSScreenStackHeaderConfigBlurEffect::Dark; return; }
+  if (string == "regular") { result = RNSScreenStackHeaderConfigBlurEffect::Regular; return; }
+  if (string == "prominent") { result = RNSScreenStackHeaderConfigBlurEffect::Prominent; return; }
+  if (string == "systemUltraThinMaterial") { result = RNSScreenStackHeaderConfigBlurEffect::SystemUltraThinMaterial; return; }
+  if (string == "systemThinMaterial") { result = RNSScreenStackHeaderConfigBlurEffect::SystemThinMaterial; return; }
+  if (string == "systemMaterial") { result = RNSScreenStackHeaderConfigBlurEffect::SystemMaterial; return; }
+  if (string == "systemThickMaterial") { result = RNSScreenStackHeaderConfigBlurEffect::SystemThickMaterial; return; }
+  if (string == "systemChromeMaterial") { result = RNSScreenStackHeaderConfigBlurEffect::SystemChromeMaterial; return; }
+  if (string == "systemUltraThinMaterialLight") { result = RNSScreenStackHeaderConfigBlurEffect::SystemUltraThinMaterialLight; return; }
+  if (string == "systemThinMaterialLight") { result = RNSScreenStackHeaderConfigBlurEffect::SystemThinMaterialLight; return; }
+  if (string == "systemMaterialLight") { result = RNSScreenStackHeaderConfigBlurEffect::SystemMaterialLight; return; }
+  if (string == "systemThickMaterialLight") { result = RNSScreenStackHeaderConfigBlurEffect::SystemThickMaterialLight; return; }
+  if (string == "systemChromeMaterialLight") { result = RNSScreenStackHeaderConfigBlurEffect::SystemChromeMaterialLight; return; }
+  if (string == "systemUltraThinMaterialDark") { result = RNSScreenStackHeaderConfigBlurEffect::SystemUltraThinMaterialDark; return; }
+  if (string == "systemThinMaterialDark") { result = RNSScreenStackHeaderConfigBlurEffect::SystemThinMaterialDark; return; }
+  if (string == "systemMaterialDark") { result = RNSScreenStackHeaderConfigBlurEffect::SystemMaterialDark; return; }
+  if (string == "systemThickMaterialDark") { result = RNSScreenStackHeaderConfigBlurEffect::SystemThickMaterialDark; return; }
+  if (string == "systemChromeMaterialDark") { result = RNSScreenStackHeaderConfigBlurEffect::SystemChromeMaterialDark; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSScreenStackHeaderConfigBlurEffect &value) {
+  switch (value) {
+    case RNSScreenStackHeaderConfigBlurEffect::None: return "none";
+    case RNSScreenStackHeaderConfigBlurEffect::ExtraLight: return "extraLight";
+    case RNSScreenStackHeaderConfigBlurEffect::Light: return "light";
+    case RNSScreenStackHeaderConfigBlurEffect::Dark: return "dark";
+    case RNSScreenStackHeaderConfigBlurEffect::Regular: return "regular";
+    case RNSScreenStackHeaderConfigBlurEffect::Prominent: return "prominent";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemUltraThinMaterial: return "systemUltraThinMaterial";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemThinMaterial: return "systemThinMaterial";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemMaterial: return "systemMaterial";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemThickMaterial: return "systemThickMaterial";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemChromeMaterial: return "systemChromeMaterial";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemUltraThinMaterialLight: return "systemUltraThinMaterialLight";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemThinMaterialLight: return "systemThinMaterialLight";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemMaterialLight: return "systemMaterialLight";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemThickMaterialLight: return "systemThickMaterialLight";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemChromeMaterialLight: return "systemChromeMaterialLight";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemUltraThinMaterialDark: return "systemUltraThinMaterialDark";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemThinMaterialDark: return "systemThinMaterialDark";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemMaterialDark: return "systemMaterialDark";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemThickMaterialDark: return "systemThickMaterialDark";
+    case RNSScreenStackHeaderConfigBlurEffect::SystemChromeMaterialDark: return "systemChromeMaterialDark";
+  }
+}
+
+class RNSScreenStackHeaderConfigProps final : public ViewProps {
+ public:
+  RNSScreenStackHeaderConfigProps() = default;
+  RNSScreenStackHeaderConfigProps(const PropsParserContext& context, const RNSScreenStackHeaderConfigProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  SharedColor backgroundColor{};
+  std::string backTitle{};
+  std::string backTitleFontFamily{};
+  int backTitleFontSize{0};
+  bool backTitleVisible{true};
+  SharedColor color{};
+  RNSScreenStackHeaderConfigDirection direction{RNSScreenStackHeaderConfigDirection::Ltr};
+  bool hidden{false};
+  bool hideShadow{false};
+  bool largeTitle{false};
+  std::string largeTitleFontFamily{};
+  int largeTitleFontSize{0};
+  std::string largeTitleFontWeight{};
+  SharedColor largeTitleBackgroundColor{};
+  bool largeTitleHideShadow{false};
+  SharedColor largeTitleColor{};
+  bool translucent{false};
+  std::string title{};
+  std::string titleFontFamily{};
+  int titleFontSize{0};
+  std::string titleFontWeight{};
+  SharedColor titleColor{};
+  bool disableBackButtonMenu{false};
+  RNSScreenStackHeaderConfigBackButtonDisplayMode backButtonDisplayMode{RNSScreenStackHeaderConfigBackButtonDisplayMode::Default};
+  bool hideBackButton{false};
+  bool backButtonInCustomView{false};
+  RNSScreenStackHeaderConfigBlurEffect blurEffect{RNSScreenStackHeaderConfigBlurEffect::None};
+  bool topInsetEnabled{false};
+};
+
+enum class RNSScreenStackHeaderSubviewType { Back, Right, Left, Title, Center, SearchBar };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSScreenStackHeaderSubviewType &result) {
+  auto string = (std::string)value;
+  if (string == "back") { result = RNSScreenStackHeaderSubviewType::Back; return; }
+  if (string == "right") { result = RNSScreenStackHeaderSubviewType::Right; return; }
+  if (string == "left") { result = RNSScreenStackHeaderSubviewType::Left; return; }
+  if (string == "title") { result = RNSScreenStackHeaderSubviewType::Title; return; }
+  if (string == "center") { result = RNSScreenStackHeaderSubviewType::Center; return; }
+  if (string == "searchBar") { result = RNSScreenStackHeaderSubviewType::SearchBar; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSScreenStackHeaderSubviewType &value) {
+  switch (value) {
+    case RNSScreenStackHeaderSubviewType::Back: return "back";
+    case RNSScreenStackHeaderSubviewType::Right: return "right";
+    case RNSScreenStackHeaderSubviewType::Left: return "left";
+    case RNSScreenStackHeaderSubviewType::Title: return "title";
+    case RNSScreenStackHeaderSubviewType::Center: return "center";
+    case RNSScreenStackHeaderSubviewType::SearchBar: return "searchBar";
+  }
+}
+
+class RNSScreenStackHeaderSubviewProps final : public ViewProps {
+ public:
+  RNSScreenStackHeaderSubviewProps() = default;
+  RNSScreenStackHeaderSubviewProps(const PropsParserContext& context, const RNSScreenStackHeaderSubviewProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  RNSScreenStackHeaderSubviewType type{RNSScreenStackHeaderSubviewType::Left};
+};
+
+class RNSScreenStackProps final : public ViewProps {
+ public:
+  RNSScreenStackProps() = default;
+  RNSScreenStackProps(const PropsParserContext& context, const RNSScreenStackProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  
+};
+
+enum class RNSSearchBarAutoCapitalize { None, Words, Sentences, Characters };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSSearchBarAutoCapitalize &result) {
+  auto string = (std::string)value;
+  if (string == "none") { result = RNSSearchBarAutoCapitalize::None; return; }
+  if (string == "words") { result = RNSSearchBarAutoCapitalize::Words; return; }
+  if (string == "sentences") { result = RNSSearchBarAutoCapitalize::Sentences; return; }
+  if (string == "characters") { result = RNSSearchBarAutoCapitalize::Characters; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSSearchBarAutoCapitalize &value) {
+  switch (value) {
+    case RNSSearchBarAutoCapitalize::None: return "none";
+    case RNSSearchBarAutoCapitalize::Words: return "words";
+    case RNSSearchBarAutoCapitalize::Sentences: return "sentences";
+    case RNSSearchBarAutoCapitalize::Characters: return "characters";
+  }
+}
+enum class RNSSearchBarPlacement { Automatic, Inline, Stacked };
+
+static inline void fromRawValue(const PropsParserContext& context, const RawValue &value, RNSSearchBarPlacement &result) {
+  auto string = (std::string)value;
+  if (string == "automatic") { result = RNSSearchBarPlacement::Automatic; return; }
+  if (string == "inline") { result = RNSSearchBarPlacement::Inline; return; }
+  if (string == "stacked") { result = RNSSearchBarPlacement::Stacked; return; }
+  abort();
+}
+
+static inline std::string toString(const RNSSearchBarPlacement &value) {
+  switch (value) {
+    case RNSSearchBarPlacement::Automatic: return "automatic";
+    case RNSSearchBarPlacement::Inline: return "inline";
+    case RNSSearchBarPlacement::Stacked: return "stacked";
+  }
+}
+
+class RNSSearchBarProps final : public ViewProps {
+ public:
+  RNSSearchBarProps() = default;
+  RNSSearchBarProps(const PropsParserContext& context, const RNSSearchBarProps &sourceProps, const RawProps &rawProps);
+
+#pragma mark - Props
+
+  bool hideWhenScrolling{false};
+  RNSSearchBarAutoCapitalize autoCapitalize{RNSSearchBarAutoCapitalize::None};
+  std::string placeholder{};
+  RNSSearchBarPlacement placement{RNSSearchBarPlacement::Stacked};
+  bool obscureBackground{false};
+  bool hideNavigationBar{false};
+  std::string cancelButtonText{};
+  SharedColor barTintColor{};
+  SharedColor tintColor{};
+  SharedColor textColor{};
+  bool disableBackButtonOverride{false};
+  std::string inputType{};
+  SharedColor hintTextColor{};
+  SharedColor headerIconColor{};
+  bool shouldShowHintSearchIcon{true};
+};
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/ShadowNodes.cpp b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/ShadowNodes.cpp
new file mode 100644
index 0000000..176a1af
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/ShadowNodes.cpp
@@ -0,0 +1,23 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeCpp.js
+ */
+
+#include <react/renderer/components/rnscreens/ShadowNodes.h>
+
+namespace facebook::react {
+
+extern const char RNSFullWindowOverlayComponentName[] = "RNSFullWindowOverlay";
+extern const char RNSScreenContainerComponentName[] = "RNSScreenContainer";
+extern const char RNSScreenContentWrapperComponentName[] = "RNSScreenContentWrapper";
+extern const char RNSScreenFooterComponentName[] = "RNSScreenFooter";
+extern const char RNSScreenNavigationContainerComponentName[] = "RNSScreenNavigationContainer";
+extern const char RNSScreenStackComponentName[] = "RNSScreenStack";
+extern const char RNSSearchBarComponentName[] = "RNSSearchBar";
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/ShadowNodes.h b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/ShadowNodes.h
new file mode 100644
index 0000000..c362759
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/ShadowNodes.h
@@ -0,0 +1,98 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateShadowNodeH.js
+ */
+
+#pragma once
+
+#include <react/renderer/components/rnscreens/EventEmitters.h>
+#include <react/renderer/components/rnscreens/Props.h>
+#include <react/renderer/components/rnscreens/States.h>
+#include <react/renderer/components/view/ConcreteViewShadowNode.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+JSI_EXPORT extern const char RNSFullWindowOverlayComponentName[];
+
+/*
+ * `ShadowNode` for <RNSFullWindowOverlay> component.
+ */
+using RNSFullWindowOverlayShadowNode = ConcreteViewShadowNode<
+    RNSFullWindowOverlayComponentName,
+    RNSFullWindowOverlayProps,
+    RNSFullWindowOverlayEventEmitter,
+    RNSFullWindowOverlayState>;
+
+JSI_EXPORT extern const char RNSScreenContainerComponentName[];
+
+/*
+ * `ShadowNode` for <RNSScreenContainer> component.
+ */
+using RNSScreenContainerShadowNode = ConcreteViewShadowNode<
+    RNSScreenContainerComponentName,
+    RNSScreenContainerProps,
+    RNSScreenContainerEventEmitter,
+    RNSScreenContainerState>;
+
+JSI_EXPORT extern const char RNSScreenContentWrapperComponentName[];
+
+/*
+ * `ShadowNode` for <RNSScreenContentWrapper> component.
+ */
+using RNSScreenContentWrapperShadowNode = ConcreteViewShadowNode<
+    RNSScreenContentWrapperComponentName,
+    RNSScreenContentWrapperProps,
+    RNSScreenContentWrapperEventEmitter,
+    RNSScreenContentWrapperState>;
+
+JSI_EXPORT extern const char RNSScreenFooterComponentName[];
+
+/*
+ * `ShadowNode` for <RNSScreenFooter> component.
+ */
+using RNSScreenFooterShadowNode = ConcreteViewShadowNode<
+    RNSScreenFooterComponentName,
+    RNSScreenFooterProps,
+    RNSScreenFooterEventEmitter,
+    RNSScreenFooterState>;
+
+JSI_EXPORT extern const char RNSScreenNavigationContainerComponentName[];
+
+/*
+ * `ShadowNode` for <RNSScreenNavigationContainer> component.
+ */
+using RNSScreenNavigationContainerShadowNode = ConcreteViewShadowNode<
+    RNSScreenNavigationContainerComponentName,
+    RNSScreenNavigationContainerProps,
+    RNSScreenNavigationContainerEventEmitter,
+    RNSScreenNavigationContainerState>;
+
+JSI_EXPORT extern const char RNSScreenStackComponentName[];
+
+/*
+ * `ShadowNode` for <RNSScreenStack> component.
+ */
+using RNSScreenStackShadowNode = ConcreteViewShadowNode<
+    RNSScreenStackComponentName,
+    RNSScreenStackProps,
+    RNSScreenStackEventEmitter,
+    RNSScreenStackState>;
+
+JSI_EXPORT extern const char RNSSearchBarComponentName[];
+
+/*
+ * `ShadowNode` for <RNSSearchBar> component.
+ */
+using RNSSearchBarShadowNode = ConcreteViewShadowNode<
+    RNSSearchBarComponentName,
+    RNSSearchBarProps,
+    RNSSearchBarEventEmitter,
+    RNSSearchBarState>;
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/States.cpp b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/States.cpp
new file mode 100644
index 0000000..719def8
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/States.cpp
@@ -0,0 +1,16 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateCpp.js
+ */
+#include <react/renderer/components/rnscreens/States.h>
+
+namespace facebook::react {
+
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/States.h b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/States.h
new file mode 100644
index 0000000..ce4369b
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/States.h
@@ -0,0 +1,101 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateStateH.js
+ */
+#pragma once
+
+#ifdef ANDROID
+#include <folly/dynamic.h>
+#endif
+
+namespace facebook::react {
+
+class RNSFullWindowOverlayState {
+public:
+  RNSFullWindowOverlayState() = default;
+
+#ifdef ANDROID
+  RNSFullWindowOverlayState(RNSFullWindowOverlayState const &previousState, folly::dynamic data){};
+  folly::dynamic getDynamic() const {
+    return {};
+  };
+#endif
+};
+
+class RNSScreenContainerState {
+public:
+  RNSScreenContainerState() = default;
+
+#ifdef ANDROID
+  RNSScreenContainerState(RNSScreenContainerState const &previousState, folly::dynamic data){};
+  folly::dynamic getDynamic() const {
+    return {};
+  };
+#endif
+};
+
+class RNSScreenContentWrapperState {
+public:
+  RNSScreenContentWrapperState() = default;
+
+#ifdef ANDROID
+  RNSScreenContentWrapperState(RNSScreenContentWrapperState const &previousState, folly::dynamic data){};
+  folly::dynamic getDynamic() const {
+    return {};
+  };
+#endif
+};
+
+class RNSScreenFooterState {
+public:
+  RNSScreenFooterState() = default;
+
+#ifdef ANDROID
+  RNSScreenFooterState(RNSScreenFooterState const &previousState, folly::dynamic data){};
+  folly::dynamic getDynamic() const {
+    return {};
+  };
+#endif
+};
+
+class RNSScreenNavigationContainerState {
+public:
+  RNSScreenNavigationContainerState() = default;
+
+#ifdef ANDROID
+  RNSScreenNavigationContainerState(RNSScreenNavigationContainerState const &previousState, folly::dynamic data){};
+  folly::dynamic getDynamic() const {
+    return {};
+  };
+#endif
+};
+
+class RNSScreenStackState {
+public:
+  RNSScreenStackState() = default;
+
+#ifdef ANDROID
+  RNSScreenStackState(RNSScreenStackState const &previousState, folly::dynamic data){};
+  folly::dynamic getDynamic() const {
+    return {};
+  };
+#endif
+};
+
+class RNSSearchBarState {
+public:
+  RNSSearchBarState() = default;
+
+#ifdef ANDROID
+  RNSSearchBarState(RNSSearchBarState const &previousState, folly::dynamic data){};
+  folly::dynamic getDynamic() const {
+    return {};
+  };
+#endif
+};
+
+} // namespace facebook::react
\ No newline at end of file
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/rnscreensJSI-generated.cpp b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/rnscreensJSI-generated.cpp
new file mode 100644
index 0000000..2c2259c
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/rnscreensJSI-generated.cpp
@@ -0,0 +1,22 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleCpp.js
+ */
+
+#include "rnscreensJSI.h"
+
+namespace facebook::react {
+
+
+
+NativeScreensModuleCxxSpecJSI::NativeScreensModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
+  : TurboModule("RNSModule", jsInvoker) {
+
+}
+
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/rnscreensJSI.h b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/rnscreensJSI.h
new file mode 100644
index 0000000..67e2fa9
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/react/renderer/components/rnscreens/rnscreensJSI.h
@@ -0,0 +1,60 @@
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/TurboModule.h>
+#include <react/bridging/Bridging.h>
+
+namespace facebook::react {
+
+
+  class JSI_EXPORT NativeScreensModuleCxxSpecJSI : public TurboModule {
+protected:
+  NativeScreensModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);
+
+public:
+  
+
+};
+
+template <typename T>
+class JSI_EXPORT NativeScreensModuleCxxSpec : public TurboModule {
+public:
+  jsi::Value get(jsi::Runtime &rt, const jsi::PropNameID &propName) override {
+    return delegate_.get(rt, propName);
+  }
+
+  static constexpr std::string_view kModuleName = "RNSModule";
+
+protected:
+  NativeScreensModuleCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
+    : TurboModule(std::string{NativeScreensModuleCxxSpec::kModuleName}, jsInvoker),
+      delegate_(reinterpret_cast<T*>(this), jsInvoker) {}
+
+
+private:
+  class Delegate : public NativeScreensModuleCxxSpecJSI {
+  public:
+    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker) :
+      NativeScreensModuleCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {
+
+    }
+
+    
+
+  private:
+    friend class NativeScreensModuleCxxSpec;
+    T *instance_;
+  };
+
+  Delegate delegate_;
+};
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/rnscreens-generated.cpp b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/rnscreens-generated.cpp
new file mode 100644
index 0000000..2b4673e
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/rnscreens-generated.cpp
@@ -0,0 +1,29 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniCpp.js
+ */
+
+#include "rnscreens.h"
+
+namespace facebook::react {
+
+
+
+NativeScreensModuleSpecJSI::NativeScreensModuleSpecJSI(const JavaTurboModule::InitParams &params)
+  : JavaTurboModule(params) {
+
+}
+
+std::shared_ptr<TurboModule> rnscreens_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
+  if (moduleName == "RNSModule") {
+    return std::make_shared<NativeScreensModuleSpecJSI>(params);
+  }
+  return nullptr;
+}
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/jni/rnscreens.h b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/rnscreens.h
new file mode 100644
index 0000000..e1bd632
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/jni/rnscreens.h
@@ -0,0 +1,31 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by codegen project: GenerateModuleJniH.js
+ */
+
+#pragma once
+
+#include <ReactCommon/JavaTurboModule.h>
+#include <ReactCommon/TurboModule.h>
+#include <jsi/jsi.h>
+
+namespace facebook::react {
+
+/**
+ * JNI C++ class for module 'NativeScreensModule'
+ */
+class JSI_EXPORT NativeScreensModuleSpecJSI : public JavaTurboModule {
+public:
+  NativeScreensModuleSpecJSI(const JavaTurboModule::InitParams &params);
+};
+
+
+JSI_EXPORT
+std::shared_ptr<TurboModule> rnscreens_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params);
+
+} // namespace facebook::react
diff --git a/node_modules/react-native-screens/android/build/generated/source/codegen/schema.json b/node_modules/react-native-screens/android/build/generated/source/codegen/schema.json
new file mode 100644
index 0000000..d06d510
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/generated/source/codegen/schema.json
@@ -0,0 +1,1838 @@
+{
+  "modules": {
+    "RNSFullWindowOverlay": {
+      "type": "Component",
+      "components": {
+        "RNSFullWindowOverlay": {
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [],
+          "commands": []
+        }
+      }
+    },
+    "RNSModalScreen": {
+      "type": "Component",
+      "components": {
+        "RNSModalScreen": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onAppear",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onDisappear",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onDismissed",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "dismissCount",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "Int32TypeAnnotation"
+                      }
+                    }
+                  ]
+                }
+              }
+            },
+            {
+              "name": "onNativeDismissCancelled",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "dismissCount",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "Int32TypeAnnotation"
+                      }
+                    }
+                  ]
+                }
+              }
+            },
+            {
+              "name": "onWillAppear",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onWillDisappear",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onHeaderHeightChange",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "headerHeight",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "DoubleTypeAnnotation"
+                      }
+                    }
+                  ]
+                }
+              }
+            },
+            {
+              "name": "onTransitionProgress",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "progress",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "DoubleTypeAnnotation"
+                      }
+                    },
+                    {
+                      "name": "closing",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "Int32TypeAnnotation"
+                      }
+                    },
+                    {
+                      "name": "goingForward",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "Int32TypeAnnotation"
+                      }
+                    }
+                  ]
+                }
+              }
+            },
+            {
+              "name": "onGestureCancel",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onHeaderBackButtonClicked",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onSheetDetentChanged",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "index",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "Int32TypeAnnotation"
+                      }
+                    },
+                    {
+                      "name": "isStable",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "BooleanTypeAnnotation"
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "sheetAllowedDetents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "sheetLargestUndimmedDetent",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": -1
+              }
+            },
+            {
+              "name": "sheetGrabberVisible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "sheetCornerRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": -1
+              }
+            },
+            {
+              "name": "sheetExpandsWhenScrolledToEdge",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "sheetInitialDetent",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "sheetElevation",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 24
+              }
+            },
+            {
+              "name": "customAnimationOnSwipe",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "fullScreenSwipeEnabled",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "fullScreenSwipeShadowEnabled",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": true
+              }
+            },
+            {
+              "name": "homeIndicatorHidden",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "preventNativeDismiss",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "gestureEnabled",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": true
+              }
+            },
+            {
+              "name": "statusBarColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "statusBarHidden",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "screenOrientation",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "statusBarAnimation",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "statusBarStyle",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "statusBarTranslucent",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "gestureResponseDistance",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ObjectTypeAnnotation",
+                "properties": [
+                  {
+                    "name": "start",
+                    "optional": false,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  },
+                  {
+                    "name": "end",
+                    "optional": false,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  },
+                  {
+                    "name": "top",
+                    "optional": false,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  },
+                  {
+                    "name": "bottom",
+                    "optional": false,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  }
+                ]
+              }
+            },
+            {
+              "name": "stackPresentation",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "push",
+                "options": [
+                  "push",
+                  "modal",
+                  "transparentModal",
+                  "fullScreenModal",
+                  "formSheet",
+                  "containedModal",
+                  "containedTransparentModal"
+                ]
+              }
+            },
+            {
+              "name": "stackAnimation",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "default",
+                "options": [
+                  "default",
+                  "flip",
+                  "simple_push",
+                  "none",
+                  "fade",
+                  "slide_from_right",
+                  "slide_from_left",
+                  "slide_from_bottom",
+                  "fade_from_bottom",
+                  "ios_from_right",
+                  "ios_from_left"
+                ]
+              }
+            },
+            {
+              "name": "transitionDuration",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 500
+              }
+            },
+            {
+              "name": "replaceAnimation",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "pop",
+                "options": [
+                  "pop",
+                  "push"
+                ]
+              }
+            },
+            {
+              "name": "swipeDirection",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "horizontal",
+                "options": [
+                  "vertical",
+                  "horizontal"
+                ]
+              }
+            },
+            {
+              "name": "hideKeyboardOnSwipe",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "activityState",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": -1
+              }
+            },
+            {
+              "name": "navigationBarColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "navigationBarTranslucent",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "navigationBarHidden",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "nativeBackButtonDismissalEnabled",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "NativeScreensModule": {
+      "type": "NativeModule",
+      "aliasMap": {},
+      "enumMap": {},
+      "spec": {
+        "eventEmitters": [],
+        "methods": []
+      },
+      "moduleName": "RNSModule"
+    },
+    "RNSScreenContainer": {
+      "type": "Component",
+      "components": {
+        "RNSScreenContainer": {
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [],
+          "commands": []
+        }
+      }
+    },
+    "RNSScreenContentWrapper": {
+      "type": "Component",
+      "components": {
+        "RNSScreenContentWrapper": {
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [],
+          "commands": []
+        }
+      }
+    },
+    "RNSScreenFooter": {
+      "type": "Component",
+      "components": {
+        "RNSScreenFooter": {
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [],
+          "commands": []
+        }
+      }
+    },
+    "RNSScreen": {
+      "type": "Component",
+      "components": {
+        "RNSScreen": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onAppear",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onDisappear",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onDismissed",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "dismissCount",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "Int32TypeAnnotation"
+                      }
+                    }
+                  ]
+                }
+              }
+            },
+            {
+              "name": "onNativeDismissCancelled",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "dismissCount",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "Int32TypeAnnotation"
+                      }
+                    }
+                  ]
+                }
+              }
+            },
+            {
+              "name": "onWillAppear",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onWillDisappear",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onHeaderHeightChange",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "headerHeight",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "DoubleTypeAnnotation"
+                      }
+                    }
+                  ]
+                }
+              }
+            },
+            {
+              "name": "onTransitionProgress",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "progress",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "DoubleTypeAnnotation"
+                      }
+                    },
+                    {
+                      "name": "closing",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "Int32TypeAnnotation"
+                      }
+                    },
+                    {
+                      "name": "goingForward",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "Int32TypeAnnotation"
+                      }
+                    }
+                  ]
+                }
+              }
+            },
+            {
+              "name": "onGestureCancel",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onHeaderBackButtonClicked",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onSheetDetentChanged",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "index",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "Int32TypeAnnotation"
+                      }
+                    },
+                    {
+                      "name": "isStable",
+                      "optional": false,
+                      "typeAnnotation": {
+                        "type": "BooleanTypeAnnotation"
+                      }
+                    }
+                  ]
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "sheetAllowedDetents",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ArrayTypeAnnotation",
+                "elementType": {
+                  "type": "FloatTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "sheetLargestUndimmedDetent",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": -1
+              }
+            },
+            {
+              "name": "sheetGrabberVisible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "sheetCornerRadius",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": -1
+              }
+            },
+            {
+              "name": "sheetExpandsWhenScrolledToEdge",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "sheetInitialDetent",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "sheetElevation",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 24
+              }
+            },
+            {
+              "name": "customAnimationOnSwipe",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "fullScreenSwipeEnabled",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "fullScreenSwipeShadowEnabled",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": true
+              }
+            },
+            {
+              "name": "homeIndicatorHidden",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "preventNativeDismiss",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "gestureEnabled",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": true
+              }
+            },
+            {
+              "name": "statusBarColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "statusBarHidden",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "screenOrientation",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "statusBarAnimation",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "statusBarStyle",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "statusBarTranslucent",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "gestureResponseDistance",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ObjectTypeAnnotation",
+                "properties": [
+                  {
+                    "name": "start",
+                    "optional": false,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  },
+                  {
+                    "name": "end",
+                    "optional": false,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  },
+                  {
+                    "name": "top",
+                    "optional": false,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  },
+                  {
+                    "name": "bottom",
+                    "optional": false,
+                    "typeAnnotation": {
+                      "type": "FloatTypeAnnotation",
+                      "default": 0
+                    }
+                  }
+                ]
+              }
+            },
+            {
+              "name": "stackPresentation",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "push",
+                "options": [
+                  "push",
+                  "modal",
+                  "transparentModal",
+                  "fullScreenModal",
+                  "formSheet",
+                  "containedModal",
+                  "containedTransparentModal"
+                ]
+              }
+            },
+            {
+              "name": "stackAnimation",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "default",
+                "options": [
+                  "default",
+                  "flip",
+                  "simple_push",
+                  "none",
+                  "fade",
+                  "slide_from_right",
+                  "slide_from_left",
+                  "slide_from_bottom",
+                  "fade_from_bottom",
+                  "ios_from_right",
+                  "ios_from_left"
+                ]
+              }
+            },
+            {
+              "name": "transitionDuration",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 500
+              }
+            },
+            {
+              "name": "replaceAnimation",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "pop",
+                "options": [
+                  "pop",
+                  "push"
+                ]
+              }
+            },
+            {
+              "name": "swipeDirection",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "horizontal",
+                "options": [
+                  "vertical",
+                  "horizontal"
+                ]
+              }
+            },
+            {
+              "name": "hideKeyboardOnSwipe",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "activityState",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "FloatTypeAnnotation",
+                "default": -1
+              }
+            },
+            {
+              "name": "navigationBarColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "navigationBarTranslucent",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "navigationBarHidden",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "nativeBackButtonDismissalEnabled",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSScreenNavigationContainer": {
+      "type": "Component",
+      "components": {
+        "RNSScreenNavigationContainer": {
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [],
+          "commands": []
+        }
+      }
+    },
+    "RNSScreenStackHeaderConfig": {
+      "type": "Component",
+      "components": {
+        "RNSScreenStackHeaderConfig": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onAttached",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onDetached",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "backgroundColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "backTitle",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "backTitleFontFamily",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "backTitleFontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "backTitleVisible",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": true
+              }
+            },
+            {
+              "name": "color",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "direction",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "ltr",
+                "options": [
+                  "rtl",
+                  "ltr"
+                ]
+              }
+            },
+            {
+              "name": "hidden",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "hideShadow",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "largeTitle",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "largeTitleFontFamily",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "largeTitleFontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "largeTitleFontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "largeTitleBackgroundColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "largeTitleHideShadow",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "largeTitleColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "translucent",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "title",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "titleFontFamily",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "titleFontSize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "Int32TypeAnnotation",
+                "default": 0
+              }
+            },
+            {
+              "name": "titleFontWeight",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "titleColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "disableBackButtonMenu",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "backButtonDisplayMode",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "default",
+                "options": [
+                  "minimal",
+                  "default",
+                  "generic"
+                ]
+              }
+            },
+            {
+              "name": "hideBackButton",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "backButtonInCustomView",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "blurEffect",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "none",
+                "options": [
+                  "none",
+                  "extraLight",
+                  "light",
+                  "dark",
+                  "regular",
+                  "prominent",
+                  "systemUltraThinMaterial",
+                  "systemThinMaterial",
+                  "systemMaterial",
+                  "systemThickMaterial",
+                  "systemChromeMaterial",
+                  "systemUltraThinMaterialLight",
+                  "systemThinMaterialLight",
+                  "systemMaterialLight",
+                  "systemThickMaterialLight",
+                  "systemChromeMaterialLight",
+                  "systemUltraThinMaterialDark",
+                  "systemThinMaterialDark",
+                  "systemMaterialDark",
+                  "systemThickMaterialDark",
+                  "systemChromeMaterialDark"
+                ]
+              }
+            },
+            {
+              "name": "topInsetEnabled",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSScreenStackHeaderSubview": {
+      "type": "Component",
+      "components": {
+        "RNSScreenStackHeaderSubview": {
+          "interfaceOnly": true,
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [],
+          "props": [
+            {
+              "name": "type",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "left",
+                "options": [
+                  "back",
+                  "right",
+                  "left",
+                  "title",
+                  "center",
+                  "searchBar"
+                ]
+              }
+            }
+          ],
+          "commands": []
+        }
+      }
+    },
+    "RNSScreenStack": {
+      "type": "Component",
+      "components": {
+        "RNSScreenStack": {
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onFinishTransitioning",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            }
+          ],
+          "props": [],
+          "commands": []
+        }
+      }
+    },
+    "RNSSearchBar": {
+      "type": "Component",
+      "components": {
+        "RNSSearchBar": {
+          "extendsProps": [
+            {
+              "type": "ReactNativeBuiltInType",
+              "knownTypeName": "ReactNativeCoreViewProps"
+            }
+          ],
+          "events": [
+            {
+              "name": "onSearchFocus",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onSearchBlur",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onSearchButtonPress",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "text",
+                      "optional": true,
+                      "typeAnnotation": {
+                        "type": "StringTypeAnnotation"
+                      }
+                    }
+                  ]
+                }
+              }
+            },
+            {
+              "name": "onCancelButtonPress",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onChangeText",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": [
+                    {
+                      "name": "text",
+                      "optional": true,
+                      "typeAnnotation": {
+                        "type": "StringTypeAnnotation"
+                      }
+                    }
+                  ]
+                }
+              }
+            },
+            {
+              "name": "onClose",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            },
+            {
+              "name": "onOpen",
+              "optional": true,
+              "bubblingType": "direct",
+              "typeAnnotation": {
+                "type": "EventTypeAnnotation",
+                "argument": {
+                  "type": "ObjectTypeAnnotation",
+                  "properties": []
+                }
+              }
+            }
+          ],
+          "props": [
+            {
+              "name": "hideWhenScrolling",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "autoCapitalize",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "none",
+                "options": [
+                  "none",
+                  "words",
+                  "sentences",
+                  "characters"
+                ]
+              }
+            },
+            {
+              "name": "placeholder",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "placement",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringEnumTypeAnnotation",
+                "default": "stacked",
+                "options": [
+                  "automatic",
+                  "inline",
+                  "stacked"
+                ]
+              }
+            },
+            {
+              "name": "obscureBackground",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "hideNavigationBar",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "cancelButtonText",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "barTintColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "tintColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "textColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "disableBackButtonOverride",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": false
+              }
+            },
+            {
+              "name": "inputType",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "StringTypeAnnotation",
+                "default": null
+              }
+            },
+            {
+              "name": "hintTextColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "headerIconColor",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "ReservedPropTypeAnnotation",
+                "name": "ColorPrimitive"
+              }
+            },
+            {
+              "name": "shouldShowHintSearchIcon",
+              "optional": true,
+              "typeAnnotation": {
+                "type": "BooleanTypeAnnotation",
+                "default": true
+              }
+            }
+          ],
+          "commands": [
+            {
+              "name": "blur",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FunctionTypeAnnotation",
+                "params": [],
+                "returnTypeAnnotation": {
+                  "type": "VoidTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "focus",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FunctionTypeAnnotation",
+                "params": [],
+                "returnTypeAnnotation": {
+                  "type": "VoidTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "clearText",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FunctionTypeAnnotation",
+                "params": [],
+                "returnTypeAnnotation": {
+                  "type": "VoidTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "toggleCancelButton",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FunctionTypeAnnotation",
+                "params": [
+                  {
+                    "name": "flag",
+                    "optional": false,
+                    "typeAnnotation": {
+                      "type": "BooleanTypeAnnotation"
+                    }
+                  }
+                ],
+                "returnTypeAnnotation": {
+                  "type": "VoidTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "setText",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FunctionTypeAnnotation",
+                "params": [
+                  {
+                    "name": "text",
+                    "optional": false,
+                    "typeAnnotation": {
+                      "type": "StringTypeAnnotation"
+                    }
+                  }
+                ],
+                "returnTypeAnnotation": {
+                  "type": "VoidTypeAnnotation"
+                }
+              }
+            },
+            {
+              "name": "cancelSearch",
+              "optional": false,
+              "typeAnnotation": {
+                "type": "FunctionTypeAnnotation",
+                "params": [],
+                "returnTypeAnnotation": {
+                  "type": "VoidTypeAnnotation"
+                }
+              }
+            }
+          ]
+        }
+      }
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/react-native-screens/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml b/node_modules/react-native-screens/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml
new file mode 100644
index 0000000..8ed1577
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.swmansion.rnscreens" >
+
+    <uses-sdk android:minSdkVersion="24" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-screens/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json b/node_modules/react-native-screens/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json
new file mode 100644
index 0000000..37294a0
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/aapt_friendly_merged_manifests/debug/processDebugManifest/aapt/output-metadata.json
@@ -0,0 +1,18 @@
+{
+  "version": 3,
+  "artifactType": {
+    "type": "AAPT_FRIENDLY_MERGED_MANIFESTS",
+    "kind": "Directory"
+  },
+  "applicationId": "com.swmansion.rnscreens",
+  "variantName": "debug",
+  "elements": [
+    {
+      "type": "SINGLE",
+      "filters": [],
+      "attributes": [],
+      "outputFile": "AndroidManifest.xml"
+    }
+  ],
+  "elementType": "File"
+}
\ No newline at end of file
diff --git a/node_modules/react-native-screens/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties b/node_modules/react-native-screens/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties
new file mode 100644
index 0000000..1211b1e
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/aar_metadata/debug/writeDebugAarMetadata/aar-metadata.properties
@@ -0,0 +1,6 @@
+aarFormatVersion=1.0
+aarMetadataVersion=1.0
+minCompileSdk=1
+minCompileSdkExtension=0
+minAndroidGradlePluginVersion=1.0.0
+coreLibraryDesugaringEnabled=false
diff --git a/node_modules/react-native-screens/android/build/intermediates/compile_r_class_jar/debug/generateDebugRFile/R.jar b/node_modules/react-native-screens/android/build/intermediates/compile_r_class_jar/debug/generateDebugRFile/R.jar
new file mode 100644
index 0000000..7af62c1
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compile_r_class_jar/debug/generateDebugRFile/R.jar differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compile_symbol_list/debug/generateDebugRFile/R.txt b/node_modules/react-native-screens/android/build/intermediates/compile_symbol_list/debug/generateDebugRFile/R.txt
new file mode 100644
index 0000000..0c51bd5
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/compile_symbol_list/debug/generateDebugRFile/R.txt
@@ -0,0 +1,28 @@
+int anim rns_default_enter_in 0x0
+int anim rns_default_enter_out 0x0
+int anim rns_default_exit_in 0x0
+int anim rns_default_exit_out 0x0
+int anim rns_fade_from_bottom 0x0
+int anim rns_fade_in 0x0
+int anim rns_fade_out 0x0
+int anim rns_fade_to_bottom 0x0
+int anim rns_ios_from_left_background_close 0x0
+int anim rns_ios_from_left_background_open 0x0
+int anim rns_ios_from_left_foreground_close 0x0
+int anim rns_ios_from_left_foreground_open 0x0
+int anim rns_ios_from_right_background_close 0x0
+int anim rns_ios_from_right_background_open 0x0
+int anim rns_ios_from_right_foreground_close 0x0
+int anim rns_ios_from_right_foreground_open 0x0
+int anim rns_no_animation_20 0x0
+int anim rns_no_animation_250 0x0
+int anim rns_no_animation_350 0x0
+int anim rns_no_animation_medium 0x0
+int anim rns_slide_in_from_bottom 0x0
+int anim rns_slide_in_from_left 0x0
+int anim rns_slide_in_from_right 0x0
+int anim rns_slide_out_to_bottom 0x0
+int anim rns_slide_out_to_left 0x0
+int anim rns_slide_out_to_right 0x0
+int anim rns_standard_accelerate_interpolator 0x0
+int drawable rns_rounder_top_corners_shape 0x0
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim-v33_rns_default_enter_in.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim-v33_rns_default_enter_in.xml.flat
new file mode 100644
index 0000000..d2d5ddd
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim-v33_rns_default_enter_in.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim-v33_rns_default_enter_out.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim-v33_rns_default_enter_out.xml.flat
new file mode 100644
index 0000000..7888d76
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim-v33_rns_default_enter_out.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim-v33_rns_default_exit_in.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim-v33_rns_default_exit_in.xml.flat
new file mode 100644
index 0000000..88fca02
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim-v33_rns_default_exit_in.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim-v33_rns_default_exit_out.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim-v33_rns_default_exit_out.xml.flat
new file mode 100644
index 0000000..797ea29
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim-v33_rns_default_exit_out.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_default_enter_in.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_default_enter_in.xml.flat
new file mode 100644
index 0000000..c66c28c
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_default_enter_in.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_default_enter_out.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_default_enter_out.xml.flat
new file mode 100644
index 0000000..82aec85
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_default_enter_out.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_default_exit_in.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_default_exit_in.xml.flat
new file mode 100644
index 0000000..d6ba0d0
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_default_exit_in.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_default_exit_out.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_default_exit_out.xml.flat
new file mode 100644
index 0000000..0c0cbe0
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_default_exit_out.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_fade_from_bottom.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_fade_from_bottom.xml.flat
new file mode 100644
index 0000000..32c2184
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_fade_from_bottom.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_fade_in.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_fade_in.xml.flat
new file mode 100644
index 0000000..dcf6c9b
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_fade_in.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_fade_out.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_fade_out.xml.flat
new file mode 100644
index 0000000..c063f5f
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_fade_out.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_fade_to_bottom.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_fade_to_bottom.xml.flat
new file mode 100644
index 0000000..c802bcd
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_fade_to_bottom.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_left_background_close.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_left_background_close.xml.flat
new file mode 100644
index 0000000..1182f72
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_left_background_close.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_left_background_open.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_left_background_open.xml.flat
new file mode 100644
index 0000000..77ed281
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_left_background_open.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_left_foreground_close.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_left_foreground_close.xml.flat
new file mode 100644
index 0000000..0e45752
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_left_foreground_close.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_left_foreground_open.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_left_foreground_open.xml.flat
new file mode 100644
index 0000000..e4463fd
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_left_foreground_open.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_right_background_close.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_right_background_close.xml.flat
new file mode 100644
index 0000000..293c573
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_right_background_close.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_right_background_open.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_right_background_open.xml.flat
new file mode 100644
index 0000000..e8e60a2
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_right_background_open.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_right_foreground_close.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_right_foreground_close.xml.flat
new file mode 100644
index 0000000..f4561e1
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_right_foreground_close.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_right_foreground_open.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_right_foreground_open.xml.flat
new file mode 100644
index 0000000..b4ffb58
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_ios_from_right_foreground_open.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_no_animation_20.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_no_animation_20.xml.flat
new file mode 100644
index 0000000..14be1c7
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_no_animation_20.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_no_animation_250.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_no_animation_250.xml.flat
new file mode 100644
index 0000000..ad3f3a8
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_no_animation_250.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_no_animation_350.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_no_animation_350.xml.flat
new file mode 100644
index 0000000..1f3b112
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_no_animation_350.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_no_animation_medium.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_no_animation_medium.xml.flat
new file mode 100644
index 0000000..97270c3
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_no_animation_medium.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_in_from_bottom.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_in_from_bottom.xml.flat
new file mode 100644
index 0000000..8182401
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_in_from_bottom.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_in_from_left.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_in_from_left.xml.flat
new file mode 100644
index 0000000..dba1c43
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_in_from_left.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_in_from_right.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_in_from_right.xml.flat
new file mode 100644
index 0000000..d57d9fc
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_in_from_right.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_out_to_bottom.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_out_to_bottom.xml.flat
new file mode 100644
index 0000000..6a2ece8
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_out_to_bottom.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_out_to_left.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_out_to_left.xml.flat
new file mode 100644
index 0000000..6a74d2b
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_out_to_left.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_out_to_right.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_out_to_right.xml.flat
new file mode 100644
index 0000000..92bc2dd
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_slide_out_to_right.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_standard_accelerate_interpolator.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_standard_accelerate_interpolator.xml.flat
new file mode 100644
index 0000000..1b551bc
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/anim_rns_standard_accelerate_interpolator.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/drawable_rns_rounder_top_corners_shape.xml.flat b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/drawable_rns_rounder_top_corners_shape.xml.flat
new file mode 100644
index 0000000..f27da2e
Binary files /dev/null and b/node_modules/react-native-screens/android/build/intermediates/compiled_local_resources/debug/compileDebugLibraryResources/out/drawable_rns_rounder_top_corners_shape.xml.flat differ
diff --git a/node_modules/react-native-screens/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties b/node_modules/react-native-screens/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
new file mode 100644
index 0000000..4707862
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/incremental/debug/packageDebugResources/compile-file-map.properties
@@ -0,0 +1,33 @@
+#Sat Feb 08 18:09:00 PST 2025
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_ios_from_right_foreground_close.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_foreground_close.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_fade_in.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_in.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_standard_accelerate_interpolator.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_standard_accelerate_interpolator.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_default_exit_out.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_exit_out.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_ios_from_right_background_open.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_background_open.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_default_enter_out.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_enter_out.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/drawable/rns_rounder_top_corners_shape.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/drawable/rns_rounder_top_corners_shape.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_default_exit_in.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_exit_in.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_ios_from_left_foreground_close.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_foreground_close.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_default_enter_in.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_enter_in.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_no_animation_250.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_250.xml
+com.swmansion.rnscreens.react-native-screens-res-7\:/anim-v33/rns_default_exit_in.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_exit_in.xml
+com.swmansion.rnscreens.react-native-screens-res-7\:/anim-v33/rns_default_exit_out.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_exit_out.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_fade_to_bottom.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_to_bottom.xml
+com.swmansion.rnscreens.react-native-screens-res-7\:/anim-v33/rns_default_enter_out.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_enter_out.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_slide_in_from_left.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_in_from_left.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_ios_from_left_foreground_open.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_foreground_open.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_fade_out.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_out.xml
+com.swmansion.rnscreens.react-native-screens-res-7\:/anim-v33/rns_default_enter_in.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_enter_in.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_slide_in_from_bottom.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_in_from_bottom.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_slide_out_to_bottom.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_out_to_bottom.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_no_animation_20.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_20.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_ios_from_left_background_open.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_background_open.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_ios_from_right_background_close.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_background_close.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_ios_from_left_background_close.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_background_close.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_slide_out_to_right.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_out_to_right.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_fade_from_bottom.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_from_bottom.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_slide_in_from_right.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_in_from_right.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_slide_out_to_left.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_out_to_left.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_ios_from_right_foreground_open.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_foreground_open.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_no_animation_350.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_350.xml
+com.swmansion.rnscreens.react-native-screens-res-6\:/anim/rns_no_animation_medium.xml=/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_medium.xml
diff --git a/node_modules/react-native-screens/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml b/node_modules/react-native-screens/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
new file mode 100644
index 0000000..9a02b4f
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/incremental/debug/packageDebugResources/merger.xml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base"/><source path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/v33"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base"><file name="rns_slide_in_from_right" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_slide_in_from_right.xml" qualifiers="" type="anim"/><file name="rns_fade_in" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_fade_in.xml" qualifiers="" type="anim"/><file name="rns_slide_out_to_right" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_slide_out_to_right.xml" qualifiers="" type="anim"/><file name="rns_ios_from_right_background_open" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_ios_from_right_background_open.xml" qualifiers="" type="anim"/><file name="rns_slide_out_to_left" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_slide_out_to_left.xml" qualifiers="" type="anim"/><file name="rns_ios_from_right_foreground_close" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_ios_from_right_foreground_close.xml" qualifiers="" type="anim"/><file name="rns_default_enter_out" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_default_enter_out.xml" qualifiers="" type="anim"/><file name="rns_slide_in_from_bottom" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_slide_in_from_bottom.xml" qualifiers="" type="anim"/><file name="rns_no_animation_medium" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_no_animation_medium.xml" qualifiers="" type="anim"/><file name="rns_ios_from_right_background_close" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_ios_from_right_background_close.xml" qualifiers="" type="anim"/><file name="rns_ios_from_left_foreground_close" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_ios_from_left_foreground_close.xml" qualifiers="" type="anim"/><file name="rns_default_exit_out" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_default_exit_out.xml" qualifiers="" type="anim"/><file name="rns_ios_from_left_background_close" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_ios_from_left_background_close.xml" qualifiers="" type="anim"/><file name="rns_no_animation_20" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_no_animation_20.xml" qualifiers="" type="anim"/><file name="rns_ios_from_left_background_open" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_ios_from_left_background_open.xml" qualifiers="" type="anim"/><file name="rns_fade_from_bottom" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_fade_from_bottom.xml" qualifiers="" type="anim"/><file name="rns_no_animation_350" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_no_animation_350.xml" qualifiers="" type="anim"/><file name="rns_ios_from_left_foreground_open" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_ios_from_left_foreground_open.xml" qualifiers="" type="anim"/><file name="rns_fade_out" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_fade_out.xml" qualifiers="" type="anim"/><file name="rns_standard_accelerate_interpolator" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_standard_accelerate_interpolator.xml" qualifiers="" type="anim"/><file name="rns_fade_to_bottom" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_fade_to_bottom.xml" qualifiers="" type="anim"/><file name="rns_slide_in_from_left" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_slide_in_from_left.xml" qualifiers="" type="anim"/><file name="rns_ios_from_right_foreground_open" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_ios_from_right_foreground_open.xml" qualifiers="" type="anim"/><file name="rns_default_exit_in" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_default_exit_in.xml" qualifiers="" type="anim"/><file name="rns_no_animation_250" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_no_animation_250.xml" qualifiers="" type="anim"/><file name="rns_default_enter_in" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_default_enter_in.xml" qualifiers="" type="anim"/><file name="rns_slide_out_to_bottom" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/anim/rns_slide_out_to_bottom.xml" qualifiers="" type="anim"/><file name="rns_rounder_top_corners_shape" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/base/drawable/rns_rounder_top_corners_shape.xml" qualifiers="" type="drawable"/></source><source path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/v33"><file name="rns_default_enter_out" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/v33/anim-v33/rns_default_enter_out.xml" qualifiers="v33" type="anim"/><file name="rns_default_exit_out" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/v33/anim-v33/rns_default_exit_out.xml" qualifiers="v33" type="anim"/><file name="rns_default_exit_in" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/v33/anim-v33/rns_default_exit_in.xml" qualifiers="v33" type="anim"/><file name="rns_default_enter_in" path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/res/v33/anim-v33/rns_default_enter_in.xml" qualifiers="v33" type="anim"/></source></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/debug/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug" generated-set="debug$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/debug/res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/generated/res/resValues/debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="generated" generated-set="generated$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="/Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/build/generated/res/resValues/debug"/></dataSet><mergedItems/></merger>
\ No newline at end of file
diff --git a/node_modules/react-native-screens/android/build/intermediates/local_only_symbol_list/debug/parseDebugLocalResources/R-def.txt b/node_modules/react-native-screens/android/build/intermediates/local_only_symbol_list/debug/parseDebugLocalResources/R-def.txt
new file mode 100644
index 0000000..33b6639
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/local_only_symbol_list/debug/parseDebugLocalResources/R-def.txt
@@ -0,0 +1,30 @@
+R_DEF: Internal format may change without notice
+local
+anim rns_default_enter_in
+anim rns_default_enter_out
+anim rns_default_exit_in
+anim rns_default_exit_out
+anim rns_fade_from_bottom
+anim rns_fade_in
+anim rns_fade_out
+anim rns_fade_to_bottom
+anim rns_ios_from_left_background_close
+anim rns_ios_from_left_background_open
+anim rns_ios_from_left_foreground_close
+anim rns_ios_from_left_foreground_open
+anim rns_ios_from_right_background_close
+anim rns_ios_from_right_background_open
+anim rns_ios_from_right_foreground_close
+anim rns_ios_from_right_foreground_open
+anim rns_no_animation_20
+anim rns_no_animation_250
+anim rns_no_animation_350
+anim rns_no_animation_medium
+anim rns_slide_in_from_bottom
+anim rns_slide_in_from_left
+anim rns_slide_in_from_right
+anim rns_slide_out_to_bottom
+anim rns_slide_out_to_left
+anim rns_slide_out_to_right
+anim rns_standard_accelerate_interpolator
+drawable rns_rounder_top_corners_shape
diff --git a/node_modules/react-native-screens/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt b/node_modules/react-native-screens/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt
new file mode 100644
index 0000000..2ec7397
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/manifest_merge_blame_file/debug/processDebugManifest/manifest-merger-blame-debug-report.txt
@@ -0,0 +1,7 @@
+1<?xml version="1.0" encoding="utf-8"?>
+2<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+3    package="com.swmansion.rnscreens" >
+4
+5    <uses-sdk android:minSdkVersion="24" />
+6
+7</manifest>
diff --git a/node_modules/react-native-screens/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml b/node_modules/react-native-screens/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml
new file mode 100644
index 0000000..8ed1577
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/merged_manifest/debug/processDebugManifest/AndroidManifest.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.swmansion.rnscreens" >
+
+    <uses-sdk android:minSdkVersion="24" />
+
+</manifest>
\ No newline at end of file
diff --git a/node_modules/react-native-screens/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json b/node_modules/react-native-screens/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json
new file mode 100644
index 0000000..0637a08
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/navigation_json/debug/extractDeepLinksDebug/navigation.json
@@ -0,0 +1 @@
+[]
\ No newline at end of file
diff --git a/node_modules/react-native-screens/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt b/node_modules/react-native-screens/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt
new file mode 100644
index 0000000..08f4ebe
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/nested_resources_validation_report/debug/generateDebugResources/nestedResourcesValidationReport.txt
@@ -0,0 +1 @@
+0 Warning/Error
\ No newline at end of file
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_enter_in.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_enter_in.xml
new file mode 100644
index 0000000..1767203
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_enter_in.xml
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<set xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shareInterpolator="false">
+
+    <alpha
+        android:fromAlpha="0.0"
+        android:toAlpha="1.0"
+        android:fillEnabled="true"
+        android:fillBefore="true"
+        android:fillAfter="true"
+        android:interpolator="@android:anim/linear_interpolator"
+        android:startOffset="50"
+        android:duration="83" />
+
+    <translate
+        android:fromXDelta="10%"
+        android:toXDelta="0"
+        android:fillEnabled="true"
+        android:fillBefore="true"
+        android:fillAfter="true"
+        android:interpolator="@android:interpolator/fast_out_extra_slow_in"
+        android:duration="450" />
+
+    <extend
+        android:fromExtendLeft="10%"
+        android:fromExtendTop="0"
+        android:fromExtendRight="0"
+        android:fromExtendBottom="0"
+        android:toExtendLeft="10%"
+        android:toExtendTop="0"
+        android:toExtendRight="0"
+        android:toExtendBottom="0"
+        android:interpolator="@android:interpolator/fast_out_extra_slow_in"
+        android:startOffset="0"
+        android:duration="450" />
+</set>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_enter_out.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_enter_out.xml
new file mode 100644
index 0000000..e7dd72b
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_enter_out.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<set xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shareInterpolator="false">
+
+    <alpha
+        android:fromAlpha="1.0"
+        android:toAlpha="1.0"
+        android:fillEnabled="true"
+        android:fillBefore="true"
+        android:fillAfter="true"
+        android:interpolator="@anim/rns_standard_accelerate_interpolator"
+        android:startOffset="0"
+        android:duration="450" />
+
+    <translate
+        android:fromXDelta="0"
+        android:toXDelta="-10%"
+        android:fillEnabled="true"
+        android:fillBefore="true"
+        android:fillAfter="true"
+        android:interpolator="@android:interpolator/fast_out_extra_slow_in"
+        android:startOffset="0"
+        android:duration="450" />
+
+    <extend
+        android:fromExtendLeft="0"
+        android:fromExtendTop="0"
+        android:fromExtendRight="10%"
+        android:fromExtendBottom="0"
+        android:toExtendLeft="0"
+        android:toExtendTop="0"
+        android:toExtendRight="10%"
+        android:toExtendBottom="0"
+        android:interpolator="@android:interpolator/fast_out_extra_slow_in"
+        android:startOffset="0"
+        android:duration="450" />
+</set>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_exit_in.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_exit_in.xml
new file mode 100644
index 0000000..949ebb7
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_exit_in.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<set xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shareInterpolator="false">
+
+    <alpha
+        android:fromAlpha="1.0"
+        android:toAlpha="1.0"
+        android:fillEnabled="true"
+        android:fillBefore="true"
+        android:fillAfter="true"
+        android:interpolator="@android:interpolator/linear"
+        android:startOffset="0"
+        android:duration="450" />
+
+    <translate
+        android:fromXDelta="-10%"
+        android:toXDelta="0"
+        android:fillEnabled="true"
+        android:fillBefore="true"
+        android:fillAfter="true"
+        android:interpolator="@android:interpolator/fast_out_extra_slow_in"
+        android:startOffset="0"
+        android:duration="450" />
+
+    <extend
+        android:fromExtendLeft="0"
+        android:fromExtendTop="0"
+        android:fromExtendRight="10%"
+        android:fromExtendBottom="0"
+        android:toExtendLeft="0"
+        android:toExtendTop="0"
+        android:toExtendRight="10%"
+        android:toExtendBottom="0"
+        android:interpolator="@android:interpolator/fast_out_extra_slow_in"
+        android:startOffset="0"
+        android:duration="450" />
+</set>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_exit_out.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_exit_out.xml
new file mode 100644
index 0000000..ba4d84d
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim-v33/rns_default_exit_out.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<set xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shareInterpolator="false">
+
+    <alpha
+        android:fromAlpha="1.0"
+        android:toAlpha="0.0"
+        android:fillEnabled="true"
+        android:fillBefore="true"
+        android:fillAfter="true"
+        android:interpolator="@android:interpolator/linear"
+        android:startOffset="35"
+        android:duration="83" />
+
+    <translate
+        android:fromXDelta="0"
+        android:toXDelta="10%"
+        android:fillEnabled="true"
+        android:fillBefore="true"
+        android:fillAfter="true"
+        android:interpolator="@android:interpolator/fast_out_extra_slow_in"
+        android:startOffset="0"
+        android:duration="450" />
+
+    <extend
+        android:fromExtendLeft="10%"
+        android:fromExtendTop="0"
+        android:fromExtendRight="0"
+        android:fromExtendBottom="0"
+        android:toExtendLeft="10%"
+        android:toExtendTop="0"
+        android:toExtendRight="0"
+        android:toExtendBottom="0"
+        android:interpolator="@android:interpolator/fast_out_extra_slow_in"
+        android:startOffset="0"
+        android:duration="450" />
+</set>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_enter_in.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_enter_in.xml
new file mode 100644
index 0000000..4398c7e
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_enter_in.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<set xmlns:android="http://schemas.android.com/apk/res/android">
+    <alpha
+        android:interpolator="@android:interpolator/accelerate_decelerate"
+        android:fromAlpha="0"
+        android:toAlpha="1.0"
+        android:startOffset="100"
+        android:duration="100"/>
+    <scale
+        android:interpolator="@android:interpolator/accelerate_decelerate"
+        android:fromXScale="0.85"
+        android:toXScale="1"
+        android:fromYScale="0.85"
+        android:toYScale="1"
+        android:pivotX="50%"
+        android:pivotY="50%"
+        android:duration="200"/>
+</set>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_enter_out.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_enter_out.xml
new file mode 100644
index 0000000..84c9175
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_enter_out.xml
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<set xmlns:android="http://schemas.android.com/apk/res/android">
+    <alpha
+        android:fromAlpha="1"
+        android:toAlpha="0.4"
+        android:startOffset="100"
+        android:duration="100"
+        android:interpolator="@android:interpolator/accelerate_decelerate" />
+
+    <scale
+        android:interpolator="@android:interpolator/accelerate_decelerate"
+        android:fromXScale="1"
+        android:toXScale="1.15"
+        android:fromYScale="1"
+        android:toYScale="1.15"
+        android:pivotX="50%"
+        android:pivotY="50%"
+        android:duration="200"/>
+</set>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_exit_in.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_exit_in.xml
new file mode 100644
index 0000000..6d6fa02
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_exit_in.xml
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<set xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shareInterpolator="false">
+    <alpha
+        android:fromAlpha="0.0"
+        android:toAlpha="1"
+        android:startOffset="50"
+        android:duration="100"/>
+    <scale
+        android:fromXScale="1.15"
+        android:toXScale="1"
+        android:fromYScale="1.15"
+        android:toYScale="1"
+        android:pivotX="50%"
+        android:pivotY="50%"
+        android:duration="200"/>
+</set>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_exit_out.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_exit_out.xml
new file mode 100644
index 0000000..b20a184
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_default_exit_out.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<set xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shareInterpolator="false"
+    android:zAdjustment="top">
+    <alpha
+        android:fromAlpha="1"
+        android:toAlpha="0.0"
+        android:startOffset="50"
+        android:duration="100"/>
+    <scale
+        android:fromXScale="1"
+        android:toXScale="0.85"
+        android:fromYScale="1"
+        android:toYScale="0.85"
+        android:pivotX="50%"
+        android:pivotY="50%"
+        android:duration="200"/>
+</set>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_from_bottom.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_from_bottom.xml
new file mode 100644
index 0000000..c7a8abc
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_from_bottom.xml
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Android Nougat open animation-->
+<!--http://aosp.opersys.com/xref/android-7.1.2_r37/xref/frameworks/base/core/res/res/anim/activity_open_enter.xml-->
+<set xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shareInterpolator="false">
+    <alpha android:fromAlpha="0.0" android:toAlpha="1.0"
+        android:interpolator="@android:interpolator/decelerate_quint"
+        android:duration="210"/>
+    <translate android:fromYDelta="8%" android:toYDelta="0"
+        android:interpolator="@android:interpolator/decelerate_quint"
+        android:duration="350"/> <!--we use rns_no_animation_350.xml as the other animation for
+        this transition since we want both of them to end at the same time. Remember to change
+        duration in both files when modifying it-->
+</set>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_in.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_in.xml
new file mode 100644
index 0000000..c78ea61
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_in.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Duration taken from debugging source code-->
+<alpha xmlns:android="http://schemas.android.com/apk/res/android"
+    android:fromAlpha="0.0"
+    android:toAlpha="1.0"
+    android:duration="150"
+    />  <!--Remember to change duration in the corresponding xml when modifying it-->
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_out.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_out.xml
new file mode 100644
index 0000000..334e63f
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_out.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Duration taken from debugging source code-->
+<alpha xmlns:android="http://schemas.android.com/apk/res/android"
+    android:fromAlpha="1.0"
+    android:toAlpha="0.0"
+    android:duration="150"
+    />  <!--Remember to change duration in the corresponding xml when modifying it-->
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_to_bottom.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_to_bottom.xml
new file mode 100644
index 0000000..2334521
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_fade_to_bottom.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--Android Nougat exit animation-->
+<!--http://aosp.opersys.com/xref/android-7.1.2_r37/xref/frameworks/base/core/res/res/anim/activity_close_exit.xml-->
+<set xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shareInterpolator="false">
+    <alpha android:fromAlpha="1.0" android:toAlpha="0.0"
+        android:interpolator="@android:interpolator/linear"
+        android:startOffset="100"
+        android:duration="150"/>
+    <translate android:fromYDelta="0%" android:toYDelta="8%"
+        android:interpolator="@android:interpolator/accelerate_quint"
+        android:duration="250"/>  <!--we use rns_no_animation_250.xml as the other animation for
+        this transition since we want both of them to end at the same time. Remember to change
+        duration in both files when modifying it-->
+</set>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_background_close.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_background_close.xml
new file mode 100644
index 0000000..5d75e0b
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_background_close.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_shortAnimTime"
+    android:fromXDelta="30%"
+    android:toXDelta="0%" />
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_background_open.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_background_open.xml
new file mode 100644
index 0000000..11a8d45
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_background_open.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_shortAnimTime"
+    android:fromXDelta="0%"
+    android:toXDelta="30%" />
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_foreground_close.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_foreground_close.xml
new file mode 100644
index 0000000..2cb6237
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_foreground_close.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_shortAnimTime"
+    android:interpolator="@android:interpolator/accelerate_decelerate"
+    android:fromXDelta="0%"
+    android:toXDelta="-100%" />
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_foreground_open.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_foreground_open.xml
new file mode 100644
index 0000000..394ac66
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_left_foreground_open.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_shortAnimTime"
+    android:interpolator="@android:interpolator/accelerate_decelerate"
+    android:fromXDelta="-100%"
+    android:toXDelta="0%" />
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_background_close.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_background_close.xml
new file mode 100644
index 0000000..66a611f
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_background_close.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_shortAnimTime"
+    android:fromXDelta="-30%"
+    android:toXDelta="0%" />
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_background_open.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_background_open.xml
new file mode 100644
index 0000000..1d92c95
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_background_open.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_shortAnimTime"
+    android:fromXDelta="0%"
+    android:toXDelta="-30%" />
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_foreground_close.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_foreground_close.xml
new file mode 100644
index 0000000..1073ae6
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_foreground_close.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_shortAnimTime"
+    android:interpolator="@android:interpolator/accelerate_decelerate"
+    android:fromXDelta="0%"
+    android:toXDelta="100%"/>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_foreground_open.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_foreground_open.xml
new file mode 100644
index 0000000..e687584
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_ios_from_right_foreground_open.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_shortAnimTime"
+    android:interpolator="@android:interpolator/accelerate_decelerate"
+    android:fromXDelta="100%"
+    android:toXDelta="0%" />
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_20.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_20.xml
new file mode 100644
index 0000000..5cc0d23
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_20.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<alpha xmlns:android="http://schemas.android.com/apk/res/android"
+    android:fromAlpha="1.0"
+    android:toAlpha="1.0"
+    android:duration="20"
+    />  <!-- non-zero duration ensures transition events are triggered correctly -->
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_250.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_250.xml
new file mode 100644
index 0000000..bd082a3
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_250.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<alpha xmlns:android="http://schemas.android.com/apk/res/android"
+    android:fromAlpha="1.0"
+    android:toAlpha="1.0"
+    android:duration="250"
+    />  <!--Remember to change duration in the corresponding xml when modifying it-->
+
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_350.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_350.xml
new file mode 100644
index 0000000..003dcd1
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_350.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<alpha xmlns:android="http://schemas.android.com/apk/res/android"
+    android:fromAlpha="1.0"
+    android:toAlpha="1.0"
+    android:duration="350"
+    />  <!--Remember to change duration in the corresponding xml when modifying it-->
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_medium.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_medium.xml
new file mode 100644
index 0000000..560eda6
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_no_animation_medium.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<alpha xmlns:android="http://schemas.android.com/apk/res/android"
+    android:fromAlpha="1.0"
+    android:toAlpha="1.0"
+    android:duration="@android:integer/config_mediumAnimTime"
+    />  <!--Remember to change duration in the corresponding xml when modifying it-->
+
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_in_from_bottom.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_in_from_bottom.xml
new file mode 100644
index 0000000..052fe15
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_in_from_bottom.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:fromYDelta="100%"
+    android:toYDelta="0%"
+    android:duration="@android:integer/config_mediumAnimTime" />  <!--we use
+        rns_no_animation_medium.xml as the other animation for this transition since we want both of
+        them to end at the same time. Remember to change duration in both files when modifying it-->
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_in_from_left.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_in_from_left.xml
new file mode 100644
index 0000000..939110f
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_in_from_left.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_mediumAnimTime"
+    android:fromXDelta="-100%"
+    android:toXDelta="0%" />
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_in_from_right.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_in_from_right.xml
new file mode 100644
index 0000000..428eb9b
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_in_from_right.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_mediumAnimTime"
+    android:fromXDelta="100%"
+    android:toXDelta="0%" />
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_out_to_bottom.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_out_to_bottom.xml
new file mode 100644
index 0000000..6b75d25
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_out_to_bottom.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:fromYDelta="0%"
+    android:toYDelta="100%"
+    android:duration="@android:integer/config_mediumAnimTime" />  <!--we use
+        rns_no_animation_medium.xml as the other animation for this transition since we want both of
+        them to end at the same time. Remember to change duration in both files when modifying it-->
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_out_to_left.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_out_to_left.xml
new file mode 100644
index 0000000..400a202
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_out_to_left.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_mediumAnimTime"
+    android:fromXDelta="0%"
+    android:toXDelta="-100%"/>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_out_to_right.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_out_to_right.xml
new file mode 100644
index 0000000..a00332b
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_slide_out_to_right.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<translate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_mediumAnimTime"
+    android:fromXDelta="0%"
+    android:toXDelta="100%"/>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_standard_accelerate_interpolator.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_standard_accelerate_interpolator.xml
new file mode 100644
index 0000000..60c57e5
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/anim/rns_standard_accelerate_interpolator.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<pathInterpolator xmlns:android="http://schemas.android.com/apk/res/android"
+    android:controlX1="0.3"
+    android:controlY1="0"
+    android:controlX2="1"
+    android:controlY2="1"/>
diff --git a/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/drawable/rns_rounder_top_corners_shape.xml b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/drawable/rns_rounder_top_corners_shape.xml
new file mode 100644
index 0000000..238b3c0
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/packaged_res/debug/packageDebugResources/drawable/rns_rounder_top_corners_shape.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <corners
+        android:topLeftRadius="8dp"
+        android:topRightRadius="8dp"/>
+    <solid android:color="#ffffff"/>
+</shape>
diff --git a/node_modules/react-native-screens/android/build/intermediates/symbol_list_with_package_name/debug/generateDebugRFile/package-aware-r.txt b/node_modules/react-native-screens/android/build/intermediates/symbol_list_with_package_name/debug/generateDebugRFile/package-aware-r.txt
new file mode 100644
index 0000000..65060a8
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/intermediates/symbol_list_with_package_name/debug/generateDebugRFile/package-aware-r.txt
@@ -0,0 +1,29 @@
+com.swmansion.rnscreens
+anim rns_default_enter_in
+anim rns_default_enter_out
+anim rns_default_exit_in
+anim rns_default_exit_out
+anim rns_fade_from_bottom
+anim rns_fade_in
+anim rns_fade_out
+anim rns_fade_to_bottom
+anim rns_ios_from_left_background_close
+anim rns_ios_from_left_background_open
+anim rns_ios_from_left_foreground_close
+anim rns_ios_from_left_foreground_open
+anim rns_ios_from_right_background_close
+anim rns_ios_from_right_background_open
+anim rns_ios_from_right_foreground_close
+anim rns_ios_from_right_foreground_open
+anim rns_no_animation_20
+anim rns_no_animation_250
+anim rns_no_animation_350
+anim rns_no_animation_medium
+anim rns_slide_in_from_bottom
+anim rns_slide_in_from_left
+anim rns_slide_in_from_right
+anim rns_slide_out_to_bottom
+anim rns_slide_out_to_left
+anim rns_slide_out_to_right
+anim rns_standard_accelerate_interpolator
+drawable rns_rounder_top_corners_shape
diff --git a/node_modules/react-native-screens/android/build/outputs/logs/manifest-merger-debug-report.txt b/node_modules/react-native-screens/android/build/outputs/logs/manifest-merger-debug-report.txt
new file mode 100644
index 0000000..a484c7e
--- /dev/null
+++ b/node_modules/react-native-screens/android/build/outputs/logs/manifest-merger-debug-report.txt
@@ -0,0 +1,17 @@
+-- Merging decision tree log ---
+manifest
+ADDED from /Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/AndroidManifest.xml:2:1-5:12
+INJECTED from /Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/AndroidManifest.xml:2:1-5:12
+	package
+		ADDED from /Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/AndroidManifest.xml:3:11-44
+		INJECTED from /Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/AndroidManifest.xml
+	xmlns:android
+		ADDED from /Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/AndroidManifest.xml:2:11-69
+uses-sdk
+INJECTED from /Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/AndroidManifest.xml reason: use-sdk injection requested
+INJECTED from /Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/AndroidManifest.xml
+INJECTED from /Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/AndroidManifest.xml
+	android:targetSdkVersion
+		INJECTED from /Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/AndroidManifest.xml
+	android:minSdkVersion
+		INJECTED from /Users/dwhudson/Documents/DW/Rememberall/node_modules/react-native-screens/android/src/main/AndroidManifest.xml
diff --git a/node_modules/react-native-screens/android/src/main/AndroidManifest.xml b/node_modules/react-native-screens/android/src/main/AndroidManifest.xml
index 2de74e8..5f5d7a2 100644
--- a/node_modules/react-native-screens/android/src/main/AndroidManifest.xml
+++ b/node_modules/react-native-screens/android/src/main/AndroidManifest.xml
@@ -1,5 +1,4 @@
 
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.swmansion.rnscreens">
+<manifest xmlns:android="http://schemas.android.com/apk/res/android">
 
 </manifest>
